<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Roland Tanglao</title>
    <description>flickr.com/roland, twitter.com/rtanglao #firefox #thunderbird
</description>
    <link>http://rolandtanglao.com/</link>
    <atom:link href="http://rolandtanglao.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sat, 02 Nov 2024 16:16:20 -0700</pubDate>
    <lastBuildDate>Sat, 02 Nov 2024 16:16:20 -0700</lastBuildDate>
    <generator>Jekyll v4.2.0</generator>
    
      <item>
        <title>Collapsible Sections work in jekyll github.com blogs and github pages but you need a markdown=&quot;1&quot; attribute in the details tag and markdown=&quot;span&quot; in the summary tag</title>
        <description>&lt;h2 id=&quot;collapsible-markdown-works&quot;&gt;Collapsible markdown works&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;You need a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;markdown=&quot;1&quot;&lt;/code&gt; attribute in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;details&lt;/code&gt; tag and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;markdown=&quot;span&quot;&lt;/code&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; &lt;/code&gt;in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;summary&lt;/code&gt; tag&lt;/li&gt;
  &lt;li&gt;Hat tip to the folks who found this in github.com issue: &lt;a href=&quot;https://github.com/github/docs/issues/32988&quot;&gt;Update docs for “Organizing information with collapsed sections” to include GitHub Pages support #32988&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;details&gt;
  &lt;summary&gt;Click me&lt;/summary&gt;
  &lt;h3 id=&quot;yes-even-collapsed-code-blocks-work&quot;&gt;yes, even collapsed code blocks work&lt;/h3&gt;
  &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hello world!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
&lt;/details&gt;

&lt;h3 id=&quot;full-code-from-issue-32988&quot;&gt;Full code from issue 32988&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;details markdown=&quot;1&quot;&amp;gt;

&amp;lt;summary markdown=&quot;span&quot;&amp;gt;Tips for collapsed sections&amp;lt;/summary&amp;gt;

### You can add a header

You can add text within a collapsed section. 

You can add an image or a code block, too.

```ruby
   puts &quot;Hello World&quot;
\`\`\` &amp;lt;-- unescape the backslashes for your actual blog post!

&amp;lt;/details&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;previously&quot;&gt;Previously&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;November 26, 2018: &lt;a href=&quot;http://rolandtanglao.com/2018/11/26/p1-collapsing-and-expanding-disclosure-triangles-using-details-summary-html-tags/&quot;&gt;HTML tags  and  can be used for expand/collapse with disclosure triangles for ‘collapsible HTML’&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 02 Nov 2024 00:00:00 -0700</pubDate>
        <link>http://rolandtanglao.com/2024/11/02/p1-collapsible-sections-details-html-tag-test/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2024/11/02/p1-collapsible-sections-details-html-tag-test/</guid>
        
        
      </item>
    
      <item>
        <title>Bodensee / Lake Constance circumnavigation / ride around the lake Strava routes &amp; GPX files for anybody riding around the Bodensee in the future! Do not follow, for planning only! To help make up for the lack of GPX files from Radweg Reisen and my lack of map / wayfinding skills</title>
        <description>&lt;ul&gt;
  &lt;li&gt;As seen on Mastodon :-)  at &lt;a href=&quot;https://devdilettante.com/@roland/113334906051980251&quot;&gt;devdilettante.com/@roland/113334906051980251&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;1. Bodensee Bummel Day 1 route: Bodensee Bummel: Hotel Ko’ono, Konstanz -&amp;gt; Gailingen am Hochrein (&lt;a href=&quot;https://drive.google.com/file/d/1d4YJmoGz6i6LVxq7FSUYpo0yD_gQx3L3/view?usp=sharing&quot;&gt;Day 1 GPX file in Google Drive&lt;/a&gt;) &amp;lt;– &lt;a href=&quot;https://www.strava.com/routes/3282752547101555878&quot;&gt;www.strava.com/routes/3282752547101555878 &lt;/a&gt; Please don’t follow this route :-) because we ended up on the road too much because we didn’t have a GPX file in advance like this. Instead, use it to plan yours :-) And hopefully someday somebody will do a proper route that avoids traffic as much as possible (I bet somebody else has already done so and I hope Radweg Reisen provides the GPX files to future customers which I see other bicycle tour companies e.g. UTracks provides a  &lt;a href=&quot;https://www.utracks.com/Spain/Self-Guided-Cycling/Spanish-Camino-by-Bike-Leon-to-Santiago&quot;&gt;Digital information pack with route notes &amp;amp; GPX for their Spanish Camino bicycle tour&lt;/a&gt; ). And yes I should learn how to use paper maps (but I bet i am not the only one who would pay extra for GPX files on bicycle tours) and not rely on digital whinge whinge, &lt;a href=&quot;https://en.wikipedia.org/wiki/Deskilling&quot;&gt;deskilling&lt;/a&gt; etc etc :-)&lt;/li&gt;
  &lt;li&gt;2. Bodensee Bummel Day 2 route: Bodensee Bummel: Gailingen am Hochrein -&amp;gt; Überlingen &amp;lt;– &lt;a href=&quot;https://strava.com/routes/3282759657221707238&quot;&gt;strava.com/routes/3282759657221707238&lt;/a&gt; (&lt;a href=&quot;https://drive.google.com/file/d/1e-DIj3oQOo-Ry3UPwYV5q5ewmiapZ9nK/view?usp=sharing&quot;&gt;Day 2 GPX file&lt;/a&gt;): Please don’t follow this route :-) because we ended up on the road too much because we didn’t have a GPX file in advance like this. Instead, use it to plan yours :-)&lt;/li&gt;
  &lt;li&gt;3.  Day 3
    &lt;ul&gt;
      &lt;li&gt;3.1 Bodensee Bummel: Day 3 Part 1 Bodensee Bummel: Überlingen -&amp;gt; Fishbach, Friedrichshafen  &lt;a href=&quot;https://strava.com/routes/3282833367325959334&quot;&gt;strava.com/routes/3282833367325959334&lt;/a&gt; (&lt;a href=&quot;https://drive.google.com/file/d/1ovZz-JXbWp6GypyRytspvN-beMSxVOnV/view?usp=sharing&quot;&gt;Day 3 Part 1 GPX file&lt;/a&gt;) Please don’t follow this route :-)  etc etc :-)&lt;/li&gt;
      &lt;li&gt;3.2 Bodensee Bummel: Day 3 Part 2 Bodensee Bummel: Day 3 Part 2: Fishbach,  Friedrichshafen -&amp;gt; Kressbronn (&lt;a href=&quot;https://drive.google.com/file/d/1-hZInoOANwInN4MpjhAhgzDSRfM2tLMN/view?usp=sharing&quot;&gt;Day 3 Part 2 GPX file&lt;/a&gt;):  Please don’t follow this route :-)  etc etc :-)  &lt;a href=&quot;https://www.strava.com/routes/3282834608474893990&quot;&gt;www.strava.com/routes/3282834608474893990&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;4.  Bodensee Bummel: Day 4: Bodensee Bummel: Kressbronn -&amp;gt; Höchst, Austria (&lt;a href=&quot;https://drive.google.com/file/d/12uHXbxcfOdKMj-AEBbzxE_yC2MTQMcY8/view?usp=sharing&quot;&gt;Day 4 GPX file&lt;/a&gt;): Please don’t follow this route :-) etc etc :-)   &lt;a href=&quot;https://www.strava.com/routes/3282835839360900774&quot;&gt;strava.com/routes/3282835839360900774&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;5. Bodensee Bummel: Day 5: Höchst, Austria -&amp;gt; Hotel Ko’Ono Litzelstetten, Konstanz, Germany (&lt;a href=&quot;https://drive.google.com/file/d/1nqGMeCEtaYQFX2SXkzCaGgMb4JqpCvCt/view?usp=sharing&quot;&gt;Day 5 GPX file&lt;/a&gt;): &lt;a href=&quot;https://www.strava.com/routes/3282836840272815270&quot;&gt;strava.com/routes/3282836840272815270)&lt;/a&gt; Please don’t follow this route :-) etc etc :-)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;previously&quot;&gt;Previously&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;October 14, 2024: &lt;a href=&quot;http://rolandtanglao.com/2024/10/14/p1-bodensee-bicycle-ride-fabulous-despite-bad-wayfinding/&quot;&gt;Bodensee Bicycle Ride with Radweg Reisen tours: Fabulous except for bad wayfinding&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 25 Oct 2024 00:00:00 -0700</pubDate>
        <link>http://rolandtanglao.com/2024/10/25/p1-bodensee-lake-constance-circumnavigation-bicycle-tour-gpx-files/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2024/10/25/p1-bodensee-lake-constance-circumnavigation-bicycle-tour-gpx-files/</guid>
        
        
      </item>
    
      <item>
        <title>Got my 6th COVID and yearly flu vaccination text message at 3:05p.m., made an appointment for 5:05 p.m.. All done! Yay! #GoScienceGo!</title>
        <description>&lt;ul&gt;
  &lt;li&gt;Received Moderna and the 2024 flu shot  at the Save-On at Kingsway and Knight. They are doing walk-ins 11-5p.m. (closed for lunch 130-2pm) for the next few days.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;previously&quot;&gt;Previously&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;October 14, 2023: &lt;a href=&quot;http://rolandtanglao.com/2023/10/14/p1-5th-vaccination-moderna-bivalent-booster-go-science-go/&quot;&gt;Got my 5th vaccination today: Moderna bivalent booster for 2023 plus the 2023 flu vaccine, go science go! #VaccinateThePlanet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 21 Oct 2024 00:00:00 -0700</pubDate>
        <link>http://rolandtanglao.com/2024/10/21/p1-covid-19-6th-vaccination-moderna-booster-go-science-go/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2024/10/21/p1-covid-19-6th-vaccination-moderna-booster-go-science-go/</guid>
        
        
      </item>
    
      <item>
        <title>Extract Month and Year from timestamp in BigQuery using SQL EXTRACT, YEAR, MONTH, CONCAT, CAST, LPAD</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://rolandtanglao.com/2020/07/29/p1-blogthis-checkvist-list-links-to-blog/&quot;&gt;Discovered&lt;/a&gt;: Aug 8, 2024 00:29  &lt;a href=&quot;https://stackoverflow.com/questions/48206963/extract-month-and-year-from-timestamp-in-bigquery&quot;&gt;Extract Month and Year from timestamp in Bigquery - Stack Overflow&lt;/a&gt; &amp;lt;– &lt;strong&gt;QUOTE&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Answering the title of the question as probably others will end up here like me looking for a way to create a YYYYMM year-month from a BigQuery timestamp. ... This is the code I ended up with in standard SQL:&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;CONCAT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;EXTRACT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;YEAR&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;timestamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;LPAD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;CAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;EXTRACT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;MONTH&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;timestamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;asstring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yearmonth&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;^^– I’ll probably need this Eines Tages!&lt;/p&gt;
&lt;h2 id=&quot;previously&quot;&gt;Previously&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;May 25, 2020: &lt;a href=&quot;http://rolandtanglao.com/2020/05/25/p3-sqlite-sql-query-to-get-all-questions-01may2020-25may2020-title-tag-content-contain-sync/&quot;&gt;HowTo: SQLite SQL query to get all May 1-25, 2020 Firefox desktop en-us questions that contain sync in title, content or tags columns&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 17 Oct 2024 00:00:00 -0700</pubDate>
        <link>http://rolandtanglao.com/2024/10/17/p1-extract-month-year-google-bigquery/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2024/10/17/p1-extract-month-year-google-bigquery/</guid>
        
        
      </item>
    
      <item>
        <title>Count Thunderbird SUMO questions by week using a CSV file using mlr aka miller by 1st creating a unix time column w/strptime and then creating an iso_week column from the unix aka epoch time w/strftime (bonus: create a SQLite file using sqlite-utils)</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://rolandtanglao.com/2020/07/29/p1-blogthis-checkvist-list-links-to-blog/&quot;&gt;Discovered&lt;/a&gt;: Sep 12, 2024 06:36&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create column with unix epoch time from &lt;a href=&quot;https://github.com/thunderbird/github-action-thunderbird-aaq/blob/main/ALLTIME/2024-yearly-thunderbird-questions.csv&quot;&gt;ALLTIME/2024-yearly-thunderbird-questions.csv:&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ../ALLTIME
mlr &lt;span class=&quot;nt&quot;&gt;--csv&lt;/span&gt; put &lt;span class=&quot;s1&quot;&gt;'$created_epoch = strptime($created, &quot;%Y-%m-%d %H:%M:%S %z&quot;)'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
2024-yearly-thunderbird-questions.csv &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; created_epoch-2024-yearly-thunderbird-questions.csv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ol&gt;
  &lt;li&gt;Create &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;created_epoch&lt;/code&gt; with unix time and isoweek with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iso_week&lt;/code&gt;
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mlr &lt;span class=&quot;nt&quot;&gt;--csv&lt;/span&gt; put &lt;span class=&quot;s1&quot;&gt;'$created_epoch = strptime($created, &quot;%Y-%m-%d %H:%M:%S %z&quot;)'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;then &lt;/span&gt;put &lt;span class=&quot;s1&quot;&gt;'$iso_week = strftime($created_epoch, &quot;%V&quot;)'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
../ALLTIME/2024-yearly-thunderbird-questions.csv &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
epoch_time_iso_week_2024-yearly-thunderbird-questions.csv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Count by iso_week
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; mlr &lt;span class=&quot;nt&quot;&gt;--csv&lt;/span&gt; count-distinct &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; iso_week &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
epoch_time_iso_week_2024-yearly-thunderbird-questions.csv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;result:&lt;/p&gt;
    &lt;pre&gt;&lt;code class=&quot;language-csv&quot;&gt;iso_week,count
01,237
02,255
03,251
04,279
05,238
06,231
07,243
08,273
09,237
10,214
11,226
12,214
13,227
14,194
15,237
16,259
17,226
18,194
19,211
20,217
21,177
22,179
23,202
24,211
25,231
26,194
27,190
28,295
29,337
30,331
31,400
32,416
33,392
34,401
35,375
36,367
37,115
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;Create database file
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ../SQLITE
sqlite-utils insert epoch_iso_week-2024-thunderbird-questions-only.db questions &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
../ALLTIME/epoch_time_iso_week_2024-yearly-thunderbird-questions.csv &lt;span class=&quot;nt&quot;&gt;--csv&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--detect-types&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;previously&quot;&gt;Previously&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;March 1, 2020: &lt;a href=&quot;http://rolandtanglao.com/2020/03/01/p1-howto-mlr-miller-remov-fields-from-csv/&quot;&gt;How to: retain selected fields and remove the rest in a CSV file using mlr aka miller&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 16 Oct 2024 00:00:00 -0700</pubDate>
        <link>http://rolandtanglao.com/2024/10/16/p1-mlr-unix-time-strptime-isoweek-strftime-sqlite-utils/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2024/10/16/p1-mlr-unix-time-strptime-isoweek-strftime-sqlite-utils/</guid>
        
        
      </item>
    
      <item>
        <title>We are all pure bloggers or at least we could be :-)</title>
        <description>&lt;ul&gt;
  &lt;li&gt;It’s just that society brainwashes us to not create text, audio, video, whatever and share it with whomever we choose.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://om.co/2024/10/13/pure-blogger/&quot;&gt;Om wrote in Pure Blogger&lt;/a&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;“Blogging is an individual and, I would say, selfish act — you do it  because it is what you want to do for you.” Pure blogging is “blogging”  because you have something to say. To me, that ability is what makes you a pure blogger. Any other explanation of blogging “is just the  traditional idea of media,” meant for an audience and reach.&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;previously&quot;&gt;Previously&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;October 18, 2018: &lt;a href=&quot;http://rolandtanglao.com/2018/10/18/p1-i-was-at-bloggercon-in-october-2003/&quot;&gt;I was at BloggerCon in October 2003 and it was glorious an everybody blogs now and Terry Heaton is right:the web connects people doesn’t merely extend old brand-oriented value propositions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 14 Oct 2024 00:00:00 -0700</pubDate>
        <link>http://rolandtanglao.com/2024/10/14/p3-we-are-all-pure-bloggers/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2024/10/14/p3-we-are-all-pure-bloggers/</guid>
        
        
      </item>
    
      <item>
        <title>Safe Vancouver Bicycle crossings</title>
        <description>&lt;ul&gt;
  &lt;li&gt;Since I am too silly :-) evidently to update my hugo blog post: &lt;a href=&quot;http://rollingroland.com/post/2020-05-08-p1-vancouver-crossings/&quot;&gt;Vancouver Crossings&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;east--west&quot;&gt;East / West&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Cross Kingsway at Miller (e.g. if you are going to Shiok or 88)&lt;/li&gt;
  &lt;li&gt;Cross Nanaimo at 24th / Vanness (e.g. if you are going to Pampanga’s at Joyce)&lt;/li&gt;
  &lt;li&gt;Cross Victoria at 19th (new in 2023 beg button/flashing lights)&lt;/li&gt;
  &lt;li&gt;Cross Commercial Drive (just before it turns into Victoria Diversion) at 18th&lt;/li&gt;
  &lt;li&gt;Cross Nanaimo at 20th&lt;/li&gt;
  &lt;li&gt;Cross Broadway at Slocan&lt;/li&gt;
  &lt;li&gt;Cross 12th at Slocan&lt;/li&gt;
  &lt;li&gt;No beg buttons on Kaslo at 1st, Broadway and 12th&lt;/li&gt;
  &lt;li&gt;Cross Knight at 47th&lt;/li&gt;
  &lt;li&gt;Cross Knight at 37th&lt;/li&gt;
  &lt;li&gt;Cross Knight at 19th&lt;/li&gt;
  &lt;li&gt;Cross Main at 18th&lt;/li&gt;
  &lt;li&gt;Cross Main at 14th&lt;/li&gt;
  &lt;li&gt;Cross Fraser at 19th&lt;/li&gt;
  &lt;li&gt;Cross Cambie at 14th&lt;/li&gt;
  &lt;li&gt;Cross Cambie at  18th&lt;/li&gt;
  &lt;li&gt;Cross Cambie at 20th&lt;/li&gt;
  &lt;li&gt;Cross Victoria at 22nd&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;north--south&quot;&gt;North / South&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Cross 12th at Heather&lt;/li&gt;
  &lt;li&gt;Cross Kingsway at Glen&lt;/li&gt;
  &lt;li&gt;Cross Kingsway at Miller&lt;/li&gt;
  &lt;li&gt;Cross Kingsway at Windsor&lt;/li&gt;
  &lt;li&gt;Cross 49th at Cypress&lt;/li&gt;
  &lt;li&gt;Cross 49th at Tisdall (not Heather or Willow)&lt;/li&gt;
  &lt;li&gt;Cross 41st at Angus&lt;/li&gt;
  &lt;li&gt;Cross 1st at Lilooet&lt;/li&gt;
  &lt;li&gt;Cross 29th at Atlin&lt;/li&gt;
  &lt;li&gt;No safe crossing at Skeena and 1st Avenue (just walk)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;previously&quot;&gt;Previously&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;March 21, 2024:  &lt;a href=&quot;http://rolandtanglao.com/2024/03/21/p1-howto-bicycling-clark-park-dami-korean-restaurant/&quot;&gt;How To: Bicycling Clark Park to Dami Korean Restaurant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 14 Oct 2024 00:00:00 -0700</pubDate>
        <link>http://rolandtanglao.com/2024/10/14/p2-vancouver-safe-bicycle-crossings/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2024/10/14/p2-vancouver-safe-bicycle-crossings/</guid>
        
        
      </item>
    
      <item>
        <title>Bodensee Bicycle Ride with Radweg Reisen tours: Fabulous except for bad wayfinding</title>
        <description>&lt;ul&gt;
  &lt;li&gt;I’ve never been great at navigation (I cried when I could not find the controls as a kid orienteering at Ball’s Falls in Ontario) so I had a lot of anxiety because Radweg Reisen didn’t provide GPX files (they had Komoot trails on their website that didn’t match up with our bicycle tour), just a paper map! I would have  paid an extra 100 Euro for GPX files that one could load into Komoot, Strava or any of the popular bicycle wayfinding apps. I would still have got lost with the GPX files but much less so and it would have given us a route to go back to when inevitably we took the wrong turn. Google Maps is terrible because it steers you to the “Rennrad” i.e. the road bicycling route when you get away from the separated bicycle paths.
    &lt;ul&gt;
      &lt;li&gt;Our neighbours Alex and Sharon had a good way to do this: have the route set by somebody who knows the trails and then have somebody who doesn’t know the trail to actually ride it and provide feedback.&lt;/li&gt;
      &lt;li&gt;Oh and don’t forget to mention the de-skilling of folks like me :-) In the good ole days, everybody knew how to use a paper map right? And coped with paper maps right?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Other than that and it raining half the time (which didn’t bother me in the slightest since I bicycle in hard rain 6 months of the year in Vancouver) the trip was fabulous.&lt;/li&gt;
  &lt;li&gt;So privileged to have the physical, mental and financial wherewithal to ride 220 km with my brother and sister around the Bodensee through Austria, Germany and Switzerland (Lake Constance in English).&lt;/li&gt;
  &lt;li&gt;Big thanks to my brother for his fantastic navigation with the terrible Google Maps!!!!!!!!!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;previously&quot;&gt;Previously&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;April 6, 2020: &lt;a href=&quot;http://rolandtanglao.com/2020/04/26/p1-adrian-daub-no-alternativelessness-hiding-germany-hidden-crisis/&quot;&gt;Adrian Daub: There Is No Alternativelessness - What’s been hiding Germany’s hidden crisis?  &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 14 Oct 2024 00:00:00 -0700</pubDate>
        <link>http://rolandtanglao.com/2024/10/14/p1-bodensee-bicycle-ride-fabulous-despite-bad-wayfinding/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2024/10/14/p1-bodensee-bicycle-ride-fabulous-despite-bad-wayfinding/</guid>
        
        
      </item>
    
      <item>
        <title>Lessons learned: Flickr API limit of 1 API request / second means running 12 threads in parallel then I need to delay at least 1 second between API requests (assuming my code needs 1 second to do its thing) and get the bare minimum metadata &amp; flickr ids are larger than ruby max int which breaks ruby sorting</title>
        <description>&lt;ul&gt;
  &lt;li&gt;Lessons learned from &lt;a href=&quot;https://devdilettante.com/@roland/112456929894572722&quot;&gt;my super long flickr average colour thread on Mastodon&lt;/a&gt;:  Lessons learned: Flickr API limit of 1 API request / second means that if I am running 12 threads in parallel then I need delay minimum of 1 second between API requests (assuming my code needs 1 second to do its thing) and get the bare minimum metadata.&lt;/li&gt;
  &lt;li&gt;I also learned that flickr integer ids are bigger than the maximum ruby ids so sorting by flickr ids as integers does NOT work. Oops :-)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;thread&quot;&gt;Thread&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;1 of whenever I get bored or give up (OWIGBOGU)  :-) &lt;a href=&quot;https://devdilettante.com/tags/rt&quot;&gt;#rt&lt;/a&gt;-flickr-worldwide-average-colour My next project I guess is hourly average colour of all of flickr hmmmm :-)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;2/OWIGBOGU :-) &lt;a href=&quot;https://devdilettante.com/tags/rt&quot;&gt;#rt&lt;/a&gt;-flickr-worldwide-average-colour i wonder how many photos are uploaded hourly? 100,000? more? less?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;3/OWIGBOGU :-) &lt;a href=&quot;https://devdilettante.com/tags/rt&quot;&gt;#rt&lt;/a&gt;-flickr-worldwide-average-colour I am sure that 50% of  photos are uploaded many hours after they are  taken. Possibly more. Also the flickr API might not give me all the  photos. So I guess I’ll think of it as an hourly snapshot of world wide  flickr average colour :-)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;4/OWIGBOGU &lt;a href=&quot;https://devdilettante.com/tags/rt&quot;&gt;#rt&lt;/a&gt;-flickr-worldwide-average-colour And it will be line noise in appearance :-) with no real patterns of colour I think which has become mundane for me :-) Mundane world wide average colour hourly for the win :-)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;5/OWIGBOGU &lt;a href=&quot;https://devdilettante.com/tags/rt&quot;&gt;#rt&lt;/a&gt;-flickr-worldwide-average-colour maybe store the average colours of photos as ints? 
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;magick -list Storage&lt;/code&gt;
output:
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Char
Double
Float
Long
LongLong
Quantum
Short
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;6/OWIGBOGU &lt;a href=&quot;https://devdilettante.com/tags/rt&quot;&gt;#rt&lt;/a&gt;-flickr-worldwide-average-colour gave up on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;imagemagick&lt;/code&gt; stream because i couldn’t get it to work. Same with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vips&lt;/code&gt;: too complicated. Going with :&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;magickimp = sprintf(&quot;magick convert \&quot;%s\&quot; -resize 1x1 txt:- | ggrep -Po \&quot;#[[:xdigit:]]{6}\&quot;&quot;, filename.gsub(/\$/, '\$'))&lt;/code&gt; from https://github.com/rtanglao/rt-flickr-sqlite-csv/blob/main/get-filename-imagemagick-average-colour-from-75x75thumbnail.rb See also: &lt;a href=&quot;http://rolandtanglao.com/2021/04/05/p1-rename-file-from-rgb-to-raw-opened-photoshop-converted-to-png/&quot;&gt;http://rolandtanglao.com/2021/04/05/p&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;7/OWIGBOGU #rt-flickr-worldwide-average-colour I think my current plan is:
1. use the flickr api to get all the metadata for an hour
2. download the first 10,000 75 pixel by 75 pixel thumbnails (maybe I’ll download all teh meta data but only 10,000 thumbs?!?)
3. Make a 100 by 100 average colour graphic (or maybe 200 x 200 if I decide to download the first 40,000 thumbnails instead of the the first 10, 000)&lt;/li&gt;
  &lt;li&gt;8/OWIGBOGU #rt-flickr-worldwide-average-colour It turns out I have most of the code I need in getLastFewWorldWidePhotos.rb , https://github.com/rtanglao/rt-flickr-worldwide-barcode/blob/main/getLastFewWorldWidePhotos.rb &amp;lt;– That code plus the resize from post #6 in this thread is all I need I think :-) Famous last words.&lt;/li&gt;
  &lt;li&gt;9/OWIGBOGU &lt;a href=&quot;https://devdilettante.com/tags/rt&quot;&gt;#rt&lt;/a&gt;-flickr-worldwide-average-colour I’m going to attempt to do a vertical bar graph style for each hour. Current plan:
    &lt;ol&gt;
      &lt;li&gt;store the thumbnails in a daily directory e.g. THUMBS/2024-05-19&lt;/li&gt;
      &lt;li&gt;store all the flickr metadata in a metadata directory e.g. “METADATA”&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;10/OWIGBOGU #rt-flickr-worldwide-average-colour It looks like there’s approximately 24000 photos uploaded to flickr every hour. Less than I thought. From my WIP at: https://github.com/rtanglao/rt-worldwide-average-colour/blob/main/get-thumbs-for-1hour-and-make-vertical-infographic.rb
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[1] pry(main)&amp;gt; photos = photos_on_this_page['photos'] =&amp;gt; {&quot;page&quot;=&amp;gt;1,  &quot;pages&quot;=&amp;gt;48, &quot;perpage&quot;=&amp;gt;500,&quot;total&quot;=&amp;gt;23505...&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;11/OWIGBOGU #rt-flickr-worldwide-average-colour going for it :-) &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;parallel ./get-metadata-for-1-hour.rb 2024 1 1 {} ::: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;12/OWIGBOGU &lt;a href=&quot;https://devdilettante.com/tags/rt&quot;&gt;#rt&lt;/a&gt;-flickr-worldwide-average-colour the metadata file for 1 hour is over 20 Megabytes LOL :-)&lt;/li&gt;
  &lt;li&gt;13/OWIGBOGU &lt;a href=&quot;https://devdilettante.com/tags/rt&quot;&gt;#rt&lt;/a&gt;-flickr-worldwide-average-colour December 25, 2023 is even more hilarious. 194, 500 photos in 1 hour :-)
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-rw-r--r--  1 roland  staff   224M 21 May 07:20 2023-12-25-00-flickr-metadata.csv
roland@Rolands-MacBook-Pro METADATA % mlr --csv count 2023-12-25-00-flickr-metadata.csv 
count
194500
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;14/OWIGBOGU &lt;a href=&quot;https://devdilettante.com/tags/rt&quot;&gt;#rt&lt;/a&gt;-flickr-worldwide-average-colour where’s the best place to store these huge metadata files :-) ??!?  dropbox? S3? don’t bother :-) ?!? i am leaning towards not bothering :-)&lt;/li&gt;
  &lt;li&gt;15/OWIGBOGU &lt;a href=&quot;https://devdilettante.com/tags/rt&quot;&gt;#rt&lt;/a&gt;-flickr-worldwide-average-colour 215,000 photos uploaded in 1 hour on Christmas day 2023. &lt;a href=&quot;https://devdilettante.com/tags/SillyStats&quot;&gt;#SillyStats&lt;/a&gt; :-)
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;% find . -name '*.csv' -print | xargs -n 1  mlr --csv count
count
187500
count
189000
count
197000
count
189500
count
202500
count
207000
count
187000
count
203500
count
198000
count
198000
count
210500
count
197000
count
205500
count
191000
count
195000
count
194500
count
202500
count
199000
count
215000
count
206000
count
202500
count
199500
count
199500
count
201000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;16/OWIGBOGU &lt;a href=&quot;https://devdilettante.com/tags/rt&quot;&gt;#rt&lt;/a&gt;-flickr-worldwide-average-colour
so I think I will code something like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;if &amp;gt; 200K photos pick 4000 random ones else pick number of photos / 200 K * 4000&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;17/OWIGBOGU &lt;a href=&quot;https://devdilettante.com/tags/rt&quot;&gt;#rt&lt;/a&gt;-flickr-worldwide-average-colour the following seems to be working &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;parallel --jobs 3 --results LOGS  ../../generate-hourly-info-graphic.rb ::: *.csv&lt;/code&gt;
code: &lt;a href=&quot;https://github.com/rtanglao/rt-worldwide-average-colour/blob/main/generate-hourly-info-graphic.rb&quot;&gt;generate-hourly-info-graphic.rb&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;18/OWIGBOGU &lt;a href=&quot;https://devdilettante.com/tags/rt&quot;&gt;#rt&lt;/a&gt;-flickr-worldwide-average-colour &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;magick montage &quot;2023-12-25*.png&quot; -tile 24x1  -geometry &quot;+0+0&quot;   daily-random-4000-2023-12-25.png&lt;/code&gt;. On flickr: https://flic.kr/p/2pTMVQZ&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;19/OWIGBOGU &lt;a href=&quot;https://devdilettante.com/tags/rt&quot;&gt;#rt&lt;/a&gt;-flickr-worldwide-average-colour The default &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gravity&lt;/code&gt; setting of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Center&lt;/code&gt; is not what we want :-) Use  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;South&lt;/code&gt; to align all images with the bottom of the image https://imagemagick.org/discourse-server/viewtopic.php?t=21965 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;magick montage &quot;2023-12-25*.png&quot; -tile 24x  -gravity South -geometry &quot;1x4000+0+0&quot;  daily-random-4000-2023-12-25.png&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;20/OWIGBOGU &lt;a href=&quot;https://devdilettante.com/tags/rt&quot;&gt;#rt&lt;/a&gt;-flickr-worldwide-average-colour flickr ids e.g. 53733918346 are greater than ruby’s maximum integer value so the sort method fails if you are sorting using flickr’s ids converted to integers.:&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;53733918346 &amp;gt; 2147483647 =&amp;gt; true&lt;/code&gt;
Solution: sort using a string I guess :-) !?!?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;21/OWIGBOGU #rt-flickr-worldwide-average-colour https://github.com/rtanglao/rt-worldwide-average-colour/blob/main/sorted-asc-try2-generate-hourly-info-graphic.rb is the code to generate sorted ascending hourly graphics (instead of sorted randomly) command line:
 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;../../sorted-asc-try2-generate-hourly-info-graphic.rb 2023-12-25-00-flickr-metadata.csv&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;22/OWIGBOGU #rt-flickr-worldwide-average-colour  generate hourly infographics each with up to 4000 photos randomly picked i.e. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;y pixels x 1 pixel&lt;/code&gt; where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;y&amp;lt;=4000&lt;/code&gt; sorted by ascending time:
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;parallel --jobs 3 --results LOGS ../../sorted-asc-try2-generate-hourly-info-graphic.rb ::: *.csv &lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;23/OWIGBOGU #rt-flickr-worldwide-average-colour  Let’s get the metadata for all of December :-) 
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;parallel --jobs 3 ./get-metadata-for-1-hour.rb 2024 12 ::: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 26 27 28 29 30 31 ::: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;24/OWIGBOGU #rt-flickr-worldwide-average-colour It’s still running 7 hours later LOL. Optimization is in order perhaps? Because 24 hours / day *30 days *6 minutes per hour /60 minutes per hour = 72 hours :-)&lt;/li&gt;
  &lt;li&gt;25/OWIGBOGU #rt-flickr-worldwide-average-colour  8 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;performance cores&lt;/code&gt; so let’s try 8 jobs &amp;amp; see if that’s faster. It might be but I think I’ll need to kill it anyway because I’ll need to move storage from the internal SSD to an external 1 to have enough space to hold the metadata files!
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;parallel --jobs 8 ./get-metadata-for-1-hour.rb 2024 12 :::   3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 26 27 28 29 30 31 ::: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 &lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;26/OWIGBOGU #rt-flickr-worldwide-average-colour YAGNI :-) You Ain’t gonna need it is an overused cliche but i am going to refactor the code to download only the necessary metadata and to check the flickr status code and to randomly delay between 500ms and 4 seconds to avoid the dreaded rate limit :-) EDIT:3600 queries per hour :-)&lt;/li&gt;
  &lt;li&gt;27/OWIGBOGU #rt-flickr-worldwide-average-colour
    &lt;ul&gt;
      &lt;li&gt;3600 flickr api requests per hour&lt;/li&gt;
      &lt;li&gt;300,000 photos / 500 photos per page = 600 API queries for each hour 600 * 24 = 600*24 = 14,400 api requests for 1 day&lt;/li&gt;
      &lt;li&gt;14400 / 3600 = 4 hours of API request for each day, so sleep &lt;del&gt;0.25&lt;/del&gt;4 seconds between API requests. Perhaps &lt;del&gt;1&lt;/del&gt; 3 seconds is more than enough margin of error since it takes time to process each of the 500 photos?!?!?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;h2 id=&quot;previously&quot;&gt;Previously&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;May 15, 2024: &lt;a href=&quot;http://rolandtanglao.com/2024/05/15/p2-feh-great-for-randomly-displaying-images-not-for-collages-use-imagemagick-instead/&quot;&gt;feh –randomize is great for viewing random images; not great for making collages, use imagemagick instead&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 17 Jun 2024 00:00:00 -0700</pubDate>
        <link>http://rolandtanglao.com/2024/06/17/p1-flickr-api-delay-1-second-only-get-bare-minimum-metadata/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2024/06/17/p1-flickr-api-delay-1-second-only-get-bare-minimum-metadata/</guid>
        
        
      </item>
    
      <item>
        <title>feh --randomize is great for viewing random images; not great for making collages, use imagemagick instead</title>
        <description>&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;feh&lt;/code&gt; can’t handle large numbers of thumbnails (and for some reason I never understood it said there were 5x thumbnails than there actually was) but it’s great for small random collages.&lt;/li&gt;
  &lt;li&gt;e.g. here’s two
    &lt;ul&gt;
      &lt;li&gt;make a random collage with feh (imagemagick is probably faster!) &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;feh  --randomize -r . --montage --verbose -X -x -H 4000 -W 4000 -O  2024-05-08-random-montage.png -E 10 -y 10&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;10200 pixel by 10200 pixel command line which took 6 hours
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;feh -r . --montage  --verbose -X -x -H 10200 -W 10200 -O  reverse-filelist-borderless-10200x10200-2024-05-09-sort-mtime-montage.png -E 20 -y 20 -S mtime --conversion-timeout 1 --borderless --reverse -f  hopefully-just-png-jpg-files.txt&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Here’s my complete mastodon&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;feh&lt;/code&gt; thread: &lt;a href=&quot;https://devdilettante.com/deck/@roland/112445889280926642&quot;&gt;https://devdilettante.com/deck/@roland/112445889280926642&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;previously&quot;&gt;Previously&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;October 29, 2022: &lt;a href=&quot;http://rolandtanglao.com/2022/10/29/p1-howto-imagemagick-montage-of-resized-1x1-average-colour/&quot;&gt;imagemagick  How To make a montage of images from average colour: 1st get average  colour by downsizing to 1x1 ; 2nd upscale with a fixed size; this  results in images in this case with 20x20 which at 80x24 leads to  1600x480&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 15 May 2024 00:00:00 -0700</pubDate>
        <link>http://rolandtanglao.com/2024/05/15/p2-feh-great-for-randomly-displaying-images-not-for-collages-use-imagemagick-instead/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2024/05/15/p2-feh-great-for-randomly-displaying-images-not-for-collages-use-imagemagick-instead/</guid>
        
        
      </item>
    
  </channel>
</rss>
