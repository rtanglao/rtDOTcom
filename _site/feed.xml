<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Roland Tanglao</title>
    <description>flickr.com/roland, twitter.com/rtanglao #firefox #thunderbird
</description>
    <link>http://rolandtanglao.com/</link>
    <atom:link href="http://rolandtanglao.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 26 Feb 2019 22:36:02 -0800</pubDate>
    <lastBuildDate>Tue, 26 Feb 2019 22:36:02 -0800</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>When you get a flickr photo using the search API or the photoset API, you can't determine which photoset it is in by setting a field in extras</title>
        <description>&lt;h1&gt;Pontifications&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://code.flickr.net/2008/08/19/standard-photos-response-apis-for-civilized-age/&quot;&gt;When you get a flickr photo using the search API or the photoset API, you can&amp;#39;t determine which photoset the photo is by setting a field in extras&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Therefore I think it&amp;#39;s best to add a field e.g. &lt;code&gt;synthetic_photos_sets_array&lt;/code&gt; which is an array of photoset ids that this photo belongs to.&lt;/li&gt;
&lt;li&gt;Interestingly enough , the certificate for code.flickr.net is broken so here is the 2008 (! still works in 2019!) blog post content for posterity&amp;#39;s sake (and when the cert 100% breaks)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;
Funny story. I went to write a blog post and when the time came to link to the documentation of our standard “standard photos response” structure, I found we had never documented it!&lt;/p&gt;

&lt;p&gt;Okay. Maybe that wasn’t so funny.&lt;/p&gt;

&lt;p&gt;But anyway, this is the blog post before that other blog post, so that when I write that other blog post I’ve got something to point to.&lt;/p&gt;

&lt;p&gt;And besides you should know this stuff if you’re using the API. It’s good stuff.
Standard Photos Response&lt;/p&gt;

&lt;p&gt;The standard photos response is a data structure that we use when we want to return a list of photos. Most prominently the ever popular swiss-army-API flickr.photos.search() uses it, but also methods like flickr.favorites.getList() or flickr.groups.pools.getPhotos().&lt;/p&gt;

&lt;p&gt;Beyond a common structure that gets serialized across all our different API response formats, standard photos response methods share a common set of arguments for sorting and paging (after all these are lists of photos), and the special extras argument.
Standard Photo Response, the XML Serialization&lt;/p&gt;

&lt;p&gt;You’re basic standard photos response looks like this. It’s just an envelope for delivering a list of photos.&lt;/p&gt;

&lt;p&gt;&lt;rsp stat=&quot;ok&quot;&gt;
  &lt;photos page=&quot;1&quot; pages=&quot;7&quot; perpage=&quot;100&quot; total=&quot;608&quot;&gt;
    &lt;photo id=&quot;2777191844&quot; owner=&quot;51035734193@N01&quot; secret=&quot;653a19d017&quot; server=&quot;3059&quot; farm=&quot;4&quot; title=&quot;FAIL&quot; ispublic=&quot;1&quot; isfriend=&quot;0&quot; isfamily=&quot;0&quot;/&gt;
    &lt;photo id=&quot;2771521705&quot; owner=&quot;51035734193@N01&quot; secret=&quot;1878507379&quot; server=&quot;3178&quot; farm=&quot;4&quot; title=&quot;In the street&quot; ispublic=&quot;1&quot; isfriend=&quot;0&quot; isfamily=&quot;0&quot;/&gt;
  &lt;/photos&gt;
&lt;/rsp&gt;&lt;/p&gt;

&lt;p&gt;We’ve got the standard Flickr &lt;rsp&gt; root element, a &lt;photos&gt; container describing the full list and the page we’re on, and some &lt;photo&gt; elements that include everything we need to display a photo.&lt;/p&gt;

&lt;p&gt;Another largely undocumented deep structure in the Flickr API is a distinction between getList() and getInfo() methods. We tend to return a pared down list of identifiers, and provide methods for getting more info about individual items. Generally it’s a very useful pattern, and saves us all bandwidth, processing, and data rot.&lt;/p&gt;

&lt;p&gt;However sometimes (often?) you’re wanting to display a bunch of photos, and having to roundtrip to call flickr.photos.getInfo() for every single one of them is annoying. (not to mention slow, and likely to get you frowned upon by our ops team)&lt;/p&gt;

&lt;p&gt;That’s where extras come in. The idea behind extras is you can selectively enrich the bare bones list I showed you earlier with the metadata you need to display your bunch of photos, without the round trip, and without fetching more then you’ll need.&lt;/p&gt;

&lt;p&gt;There are currently 13 different extras available, and we add new ones periodically as new concepts come online, or you make a compelling enough case for them.&lt;/p&gt;

&lt;p&gt;As of today they are: license, date&lt;em&gt;upload, date&lt;/em&gt;taken, owner&lt;em&gt;name, icon&lt;/em&gt;server, original&lt;em&gt;format, last&lt;/em&gt;update, geo, tags, machine&lt;em&gt;tags, o&lt;/em&gt;dims, views, media.
license&lt;/p&gt;

&lt;p&gt;Is the photo “All rights reversed”? Licensed under one of the CC license?&lt;/p&gt;

&lt;p&gt;&lt;photo id=&quot;2777191844&quot; owner=&quot;51035734193@N01&quot; secret=&quot;653a19d017&quot;
 server=&quot;3059&quot; farm=&quot;4&quot; title=&quot;FAIL&quot; ispublic=&quot;1&quot; isfriend=&quot;0&quot; isfamily=&quot;0&quot; 
 license=&quot;3&quot;/&gt;&lt;/p&gt;

&lt;p&gt;license=”3” means Attribution-NonCommercial-NoDerivs, you can get our mappings with flickr.photos.licenses.getInfo().
date&lt;em&gt;upload, date&lt;/em&gt;taken, last_update&lt;/p&gt;

&lt;p&gt;When was the photo uploaded to Flickr? When do we think it was taken? When was its metadata last twiddled?&lt;/p&gt;

&lt;p&gt;&lt;photo id=&quot;2772368826&quot; owner=&quot;51035734193@N01&quot; secret=&quot;1078392104&quot;
 server=&quot;3122&quot; farm=&quot;4&quot;       title=&quot;Finger on the button&quot; ispublic=&quot;1&quot; isfriend=&quot;0&quot; isfamily=&quot;0&quot;
 license=&quot;3&quot;  dateupload=&quot;1219006901&quot; datetaken=&quot;2008-08-17 12:38:06&quot; 
datetakengranularity=&quot;0&quot;     lastupdate=&quot;1219117103&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Yes the extras param is called date&lt;em&gt;upload the attribute is dateupload, what can I say, legacy. Notice also that dateupload and lastupdate are epoch seconds, while datetakengranularity is probably best ignored.
owner&lt;/em&gt;name and icon_server&lt;/p&gt;

&lt;p&gt;Everything you need to properly credit the photographer, including their name, and the info necessary to display their buddyicon.&lt;/p&gt;

&lt;p&gt;&lt;photo id=&quot;2772368826&quot; owner=&quot;51035734193@N01&quot; secret=&quot;1078392104&quot; 
server=&quot;3122&quot; farm=&quot;4&quot; title=&quot;Finger on the button&quot; ispublic=&quot;1&quot; isfriend=&quot;0&quot; isfamily=&quot;0&quot; 
ownername=&quot;kellan&quot; iconserver=&quot;54&quot; iconfarm=&quot;1&quot;/&gt;&lt;/p&gt;

&lt;p&gt;geo&lt;/p&gt;

&lt;p&gt;If the photo was geotagged include the latitude, longitude, and accuracy of the geotagging.&lt;/p&gt;

&lt;p&gt;&lt;photo id=&quot;2772368826&quot; owner=&quot;51035734193@N01&quot; secret=&quot;1078392104&quot; 
server=&quot;3122&quot; farm=&quot;4&quot; title=&quot;Finger on the button&quot; ispublic=&quot;1&quot; isfriend=&quot;0&quot; isfamily=&quot;0&quot; 
latitude=&quot;40.714666&quot; longitude=&quot;73.957333&quot; accuracy=&quot;16&quot;/&gt;&lt;/p&gt;

&lt;p&gt;tags and machine_tags&lt;/p&gt;

&lt;p&gt;Note these are the “clean” versions of the tags and machine tags, which means spaces, and most punctuation will have been stripped.  Safe to display in HTML, and useable as URL fragments.&lt;/p&gt;

&lt;p&gt;&lt;photo id=&quot;2772368826&quot; owner=&quot;51035734193@N01&quot; secret=&quot;1078392104&quot; 
server=&quot;3122&quot; farm=&quot;4&quot; title=&quot;Finger on the button&quot; ispublic=&quot;1&quot; isfriend=&quot;0&quot; isfamily=&quot;0&quot; 
tags=&quot;nyc streetart williamsburg ph:camera=iphone3g&quot; 
machine_tags=&quot;ph:camera=iphone3g&quot;/&gt;&lt;/p&gt;

&lt;p&gt;original&lt;em&gt;format and o&lt;/em&gt;dims&lt;/p&gt;

&lt;p&gt;Assuming you’re making API calls as a member who is authorized to download a photo (e.g. the photographer) you can ask for details about the unmodified, full resolution photo that was uploaded.  Get the original file format, the secret needed to construct the URL to the photo, and what the original’s dimensions are.&lt;/p&gt;

&lt;p&gt;&lt;photo id=&quot;2772368826&quot; owner=&quot;51035734193@N01&quot; secret=&quot;1078392104&quot; 
server=&quot;3122&quot; farm=&quot;4&quot; title=&quot;Finger on the button&quot; ispublic=&quot;1&quot; isfriend=&quot;0&quot; isfamily=&quot;0&quot; 
originalsecret=&quot;xxxxxxxx&quot; originalformat=&quot;jpg&quot; o_width=&quot;1200&quot; 
o_height=&quot;1600&quot;/&gt;&lt;/p&gt;

&lt;p&gt;views&lt;/p&gt;

&lt;p&gt;How many times has this photo been viewed by folks other then the person who uploaded it?&lt;/p&gt;

&lt;p&gt;&lt;photo id=&quot;2772368826&quot; owner=&quot;51035734193@N01&quot; secret=&quot;1078392104&quot; 
server=&quot;3122&quot; farm=&quot;4&quot; title=&quot;Finger on the button&quot; ispublic=&quot;1&quot; isfriend=&quot;0&quot; isfamily=&quot;0&quot; 
views=&quot;9&quot;/&gt;&lt;/p&gt;

&lt;p&gt;media&lt;/p&gt;

&lt;p&gt;Is it a photo? Or a video? Has it been processed and is it ready for displaying? (media_status is a lot more useful for videos)&lt;/p&gt;

&lt;p&gt;&lt;photo id=&quot;2771521705&quot; owner=&quot;51035734193@N01&quot; secret=&quot;1878507379&quot; 
server=&quot;3178&quot; farm=&quot;4&quot; title=&quot;In the street&quot; ispublic=&quot;1&quot; isfriend=&quot;0&quot; isfamily=&quot;0&quot; 
media=&quot;photo&quot; media_status=&quot;ready&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Wow. What a list. Really, what more could anyone ever want? (that’s rhetorical)
The punch line&lt;/p&gt;

&lt;p&gt;That’s standard photos responses, and how to use extras (paging and sorting is left as an exercise to the reader). Mastering the format is the key to building both interesting and performant API applications. use the metadata, love the metadata, and ditch the round trip.&lt;/p&gt;

&lt;p&gt;And now for the that next blog post I mentioned ….&lt;/p&gt;

&lt;p&gt;&lt;/code&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 26 Feb 2019 00:00:00 -0800</pubDate>
        <link>http://rolandtanglao.com/2019/02/26/p1-flickr-extras-in-the-flickr-api-does-not-have-an-albums-field/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2019/02/26/p1-flickr-extras-in-the-flickr-api-does-not-have-an-albums-field/</guid>
        
        
      </item>
    
      <item>
        <title>backup-originals.rb - I have written flickr backup programs like this at least twice :-) How about you :-) ?</title>
        <description>&lt;h1&gt;Pontifications&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rtanglao/for-jmv-pm-photos/blob/master/backup-originals.rb&quot;&gt;backup-originals.rb&lt;/a&gt; - I have written flickr backup programs like this at least twice :-) How about you :-) ? See &lt;a href=&quot;https://github.com/rtanglao/mongoflickrbackup/blob/gh-pages/backup75x75.rb&quot;&gt;https://github.com/rtanglao/mongoflickrbackup/blob/gh-pages/backup75x75.rb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 25 Feb 2019 00:00:00 -0800</pubDate>
        <link>http://rolandtanglao.com/2019/02/25/p1-i-have-written-flickr-backup-programs-twice-how-about-you/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2019/02/25/p1-i-have-written-flickr-backup-programs-twice-how-about-you/</guid>
        
        
      </item>
    
      <item>
        <title>get-set-photo-metadata.rb - Ruby code to download metadata from a  flickr set of photos i.e an album</title>
        <description>&lt;h1&gt;Pontifications&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;To use &lt;a href=&quot;https://github.com/rtanglao/for-jmv-pm-photos/blob/master/get-set-photo-metadata.rb&quot;&gt;get-set-photo-metadata.rb&lt;/a&gt;, first setup mongoddb&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /home/roland/GIT/for-jmv-pm-photos
&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; ./setupFlickrjmvpmDB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;and then specify two parameters: the flickr alphanumeric userid and the flickr set id&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;./get-set-photo-metadata.rb 36896321@N08 72157622068072145
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        <pubDate>Sun, 24 Feb 2019 00:00:00 -0800</pubDate>
        <link>http://rolandtanglao.com/2019/02/24/p1-retrieve-public-flickr-photoset/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2019/02/24/p1-retrieve-public-flickr-photoset/</guid>
        
        
      </item>
    
      <item>
        <title>Payak 2019: 1 hour 29 minutes (skate), Payak 2018: 1:40  (skate) Payak 2017: 1:25 (classic)</title>
        <description>&lt;h1&gt;Pontifications&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Great snow conditions but not as great as 2017! I feel a lot better about my skate technique this year compared to &lt;a href=&quot;http://rolandtanglao.com/2018/02/26/p1-payak-2018-skate-skiing-140/&quot;&gt;2018&lt;/a&gt; (thanks Coach Jessica and Zayne) and my strength (thanks Coach Gina)! &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zone4.ca/race/2019-02-23/327f562e/results/&quot;&gt;Official Payak 2019 Results from zone4.ca&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Video from Relive&lt;/h2&gt;

&lt;blockquote class=&quot;embedly-card&quot; data-card-controls=&quot;0&quot; data-card-key=&quot;f1631a41cb254ca5b035dc5747a5bd75&quot;&gt;&lt;h4&gt;&lt;a href=&quot;https://www.relive.cc/view/2170380303?r=embed-site&quot;&gt;Relive 'Payak 2019 - 10 minuten schneller :-) Super fun!'&lt;/a&gt;&lt;/h4&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;https://cdn.embedly.com/widgets/platform.js&quot; charset=&quot;UTF-8&quot;&gt;&lt;/script&gt;

&lt;h2&gt;Strava&lt;/h2&gt;

&lt;iframe height='405' width='590' frameborder='0' allowtransparency='true' scrolling='no' src='https://www.strava.com/activities/2170380303/embed/4c73b6d510a2cc0e85ea5c758cddc5768f97afa8'&gt;&lt;/iframe&gt;
</description>
        <pubDate>Sat, 23 Feb 2019 00:00:00 -0800</pubDate>
        <link>http://rolandtanglao.com/2019/02/23/p1-payak-2019-129/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2019/02/23/p1-payak-2019-129/</guid>
        
        
      </item>
    
      <item>
        <title>Teaching Digital Ladders February 25-26, 2019 to Arts folks</title>
        <description>&lt;h1&gt;Pontifications&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;From the &amp;quot;This is going to be fun&amp;quot; department:

&lt;ul&gt;
&lt;li&gt;I am one of the &lt;a href=&quot;https://www.digitalladders.ca/who-we-are&quot;&gt;faculty&lt;/a&gt; who will be teaching (more like dis-coordinating in the best positive sense! you know like &lt;a href=&quot;https://cogdogblog.com/&quot;&gt;cogdog&lt;/a&gt;, &lt;a href=&quot;https://abject.ca/about/&quot;&gt;Brian Lamb&amp;#39;s abject learning&lt;/a&gt; or &lt;a href=&quot;https://darcynorman.net/&quot;&gt;D&amp;#39;arcy Norman&lt;/a&gt;) &lt;a href=&quot;https://www.digitalladders.ca/&quot;&gt;Digital Ladders&lt;/a&gt; &lt;a href=&quot;https://www.digitalladders.ca/workshops&quot;&gt;Workshops&lt;/a&gt; February 25-26, 2019 to arts folks who are unencumbered by large amounts of digital knowledge :-). It&amp;#39;s going to be fun brainstorming and helping arts folks fill in their digital knowledge. Can&amp;#39;t wait!&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 21 Feb 2019 00:00:00 -0800</pubDate>
        <link>http://rolandtanglao.com/2019/02/21/p1-digital-ladders-feb26-feb27/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2019/02/21/p1-digital-ladders-feb26-feb27/</guid>
        
        
      </item>
    
      <item>
        <title>Make a tshirt from Kjetil Golid's fabulous Noisify (via Flowing Data)?</title>
        <description>&lt;h1&gt;Pontifications&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Make a tshirt from &lt;a href=&quot;https://generated.space/sketch/noisify/&quot;&gt;Kjetil Golid&amp;#39;s Noisify&lt;/a&gt; via &lt;a href=&quot;https://flowingdata.com/2019/02/12/generate-a-noise-field-from-an-image/&quot;&gt;Flowing Data&lt;/a&gt;?&lt;/li&gt;
&lt;li&gt;Maybe run this web app from my Mac? &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 20 Feb 2019 00:00:00 -0800</pubDate>
        <link>http://rolandtanglao.com/2019/02/20/p1-noisify-gradient-great-for-tshirts/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2019/02/20/p1-noisify-gradient-great-for-tshirts/</guid>
        
        
      </item>
    
      <item>
        <title>Don't be selfish folks, cafes are not designed for customers to take up more than one person width</title>
        <description>&lt;h1&gt;Pontifications&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;To all the folks at Match, Lucky&amp;#39;s and basically every cafe in Vancouver:

&lt;ul&gt;
&lt;li&gt;&amp;quot;Don&amp;#39;t be selfish folks, cafes are not designed for customers to take up more than one person width&amp;quot;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;I want to trigger a random sound bite from an invisible :-) speaker that says &amp;quot;don&amp;#39;t be shellfish :-)&amp;quot;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 18 Feb 2019 00:00:00 -0800</pubDate>
        <link>http://rolandtanglao.com/2019/02/18/p1-do-not-be-selfish-cafes-are-not-designed-for-space-larger-than-the-width-of-one-human/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2019/02/18/p1-do-not-be-selfish-cafes-are-not-designed-for-space-larger-than-the-width-of-one-human/</guid>
        
        
      </item>
    
      <item>
        <title>Using mlr aka miller to combine selected fields from multiple CSV files</title>
        <description>&lt;h1&gt;Pontifications&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;I think it&amp;#39;s worth pulling out the &lt;a href=&quot;https://github.com/johnkerl/miller&quot;&gt;miller aka mlr&lt;/a&gt; bits from &lt;a href=&quot;http://rolandtanglao.com/2019/02/10/p1-users-dont-know-antivirus-is-breaking-firefox-and-it-not-obvious-when-it-does/&quot;&gt;Users don&amp;#39;t know when their antivirus breaks Firefox and it&amp;#39;s not obvious to them so they don&amp;#39;t mention it in their support requests&lt;/a&gt; because combining selected fields CSV files is a common thing to do:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mlr &lt;span class=&quot;nt&quot;&gt;--csv&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cut&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-x&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt;  &lt;span class=&quot;s1&quot;&gt;'product,topic,tags'&lt;/span&gt;  firefox&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.csv &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; ff58-65-id-created-title-content-firefoxversion-1streleaseweek-day.csv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;where:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;product, topic, tags&lt;/code&gt; are the fields to cut out&lt;/li&gt;
&lt;li&gt;&lt;code&gt;firefox*.csv&lt;/code&gt; are the CSV files to combine&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 15 Feb 2019 00:00:00 -0800</pubDate>
        <link>http://rolandtanglao.com/2019/02/15/p1-using-miller-aka-mlr-to-combine-selected-fields-from-a-csv-file/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2019/02/15/p1-using-miller-aka-mlr-to-combine-selected-fields-from-a-csv-file/</guid>
        
        
      </item>
    
      <item>
        <title>R Studio Conf Keynote Day 2 - Explicit Direct Instruction in Programming Education - Felienne  aka 'It's 2019 read code out loud to teach coding'</title>
        <description>&lt;h1&gt;Pontifications&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Amazing, explicit strategies for reading code and reading code out loud! Watch the whole thing: &lt;a href=&quot;https://resources.rstudio.com/rstudio-conf-2019/opening-keynote-day2&quot;&gt;R Studio Conf Keynote Day 2 - Explicit Direct Instruction in Programming Education - Felienne&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 14 Feb 2019 00:00:00 -0800</pubDate>
        <link>http://rolandtanglao.com/2019/02/14/p1-rstudio-conf-2019-keynote-day2-explicit-direct-instruction-programming-education-Felienne/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2019/02/14/p1-rstudio-conf-2019-keynote-day2-explicit-direct-instruction-programming-education-Felienne/</guid>
        
        
      </item>
    
      <item>
        <title>Prediction: Current Podcast 'boom' :-) will end before the end of 2020</title>
        <description>&lt;h1&gt;Pontifications&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Just like blogging everybody does it because it&amp;#39;s once again popular like you know back in the naughty naughts i.e. the 2000s.&lt;/li&gt;
&lt;li&gt;But just like blogging, you gotta really love it to sustain it and you gotta do the work, vlogging, blogging, podcasting, etc etc become hard (but fun :-) !) work akin to an artist&amp;#39;s daily practice over time! And not everybody can be popular, influential or perfect like NPR and CBC so if that&amp;#39;s what you are in for you will exit just like the podcasters did in the 2000s.&lt;/li&gt;
&lt;li&gt;Hope I&amp;#39;m wrong :-)&lt;/li&gt;
&lt;li&gt;But I think I&amp;#39;m not; I think voice, video, text, pictures will just be content types for everyone&amp;#39;s personal published stuff and few people will do it on any sort of regular schedule or artistic practice and that&amp;#39;s ok!&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 13 Feb 2019 00:00:00 -0800</pubDate>
        <link>http://rolandtanglao.com/2019/02/13/p1-prediction-podcast-boom-ends-before-end-2020/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2019/02/13/p1-prediction-podcast-boom-ends-before-end-2020/</guid>
        
        
      </item>
    
  </channel>
</rss>
