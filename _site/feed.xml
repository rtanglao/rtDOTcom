<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Roland Tanglao</title>
    <description>flickr.com/roland, twitter.com/rtanglao #firefox #thunderbird
</description>
    <link>http://rolandtanglao.com/</link>
    <atom:link href="http://rolandtanglao.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Fri, 29 May 2020 20:45:55 -0700</pubDate>
    <lastBuildDate>Fri, 29 May 2020 20:45:55 -0700</lastBuildDate>
    <generator>Jekyll v4.0.0</generator>
    
      <item>
        <title>HTML parsing for pup - Using the pup tool to more sanely extract data from HTML files (Stanford Journalism Computational Methods in the Civic Sphere)</title>
        <description>&lt;h1 id=&quot;pontifications&quot;&gt;Pontifications&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;QUOTE&lt;/strong&gt;–&amp;gt;While &lt;a href=&quot;http://www.compciv.org/recipes/grep/basic-of-grep&quot;&gt;grep&lt;/a&gt; and &lt;a href=&quot;http://www.compciv.org/recipes/grep/basic-regex&quot;&gt;regular expressions&lt;/a&gt; are a powerful way to search raw text, when text files already have &lt;em&gt;structure&lt;/em&gt; – such as comma-delimited files, or raw HTML – we want to take  advantage of programs specifically designed to exploit that structure.  With HTML, especially, finding a pattern &lt;em&gt;regular&lt;/em&gt; enough (nevermind simple) that a regex can exploit is madness.&lt;/p&gt;

    &lt;p&gt;So this is &lt;a href=&quot;https://github.com/ericchiang/pup&quot;&gt;why we’re using pup&lt;/a&gt;, which works from the command-line. Every other parsing library (&lt;a href=&quot;http://www.crummy.com/software/BeautifulSoup/bs4/doc/&quot;&gt;such as Python and BeautifulSoup&lt;/a&gt;) you use will pretty much act the same as pup.&lt;/p&gt;

    &lt;p&gt;I recommend just trying out pup, as described in the rest of this guide. The &lt;em&gt;arguments&lt;/em&gt; it takes are &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_started/Selectors&quot;&gt;CSS Selectors&lt;/a&gt;, which you may be familiar with if you’ve ever used &lt;a href=&quot;http://api.jquery.com/category/selectors/&quot;&gt;JQuery&lt;/a&gt;.&lt;/p&gt;

    &lt;p&gt;However, you don’t have to &lt;em&gt;know&lt;/em&gt; CSS (i.e. how to style webpages) to do HTML parsing. You just have to understand how &lt;strong&gt;CSS Selectors&lt;/strong&gt; are used to &lt;em&gt;target&lt;/em&gt; specific HTML elements. Instead of &lt;em&gt;styling&lt;/em&gt; these HTML elements, we will be grabbing the &lt;em&gt;text&lt;/em&gt; inside them. Different purpose, but same process and syntax of &lt;em&gt;selection&lt;/em&gt;. &amp;lt;– &lt;strong&gt;END QUOTE&lt;/strong&gt; —&amp;gt; Read the whole thing &lt;a href=&quot;http://www.compciv.org/recipes/cli/pup-for-parsing-html/&quot;&gt;HTML parsing for pup - Using the pup tool to more sanely extract data from HTML files&lt;/a&gt; (Stanford Journalism Computational Methods in the Civic Sphere) &amp;lt;— fantastic HOWTO&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Previously: &lt;a href=&quot;http://rolandtanglao.com/2020/02/16/p2-pup-for-html-like-jq-for-json/&quot;&gt;pup for HTML is like jq for JSON&lt;/a&gt;, &lt;a href=&quot;http://rolandtanglao.com/2020/05/14/p2-how-to-get-all-firefox-desktop-urls-using-pup-without-grep/&quot;&gt;How To get all Firefox Desktop SUMO KB Articles using pup WITHOUT using grep by using ‘attr{href}’&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 29 May 2020 00:00:00 -0700</pubDate>
        <link>http://rolandtanglao.com/2020/05/29/p1-html-parsing-for-pup=stanford-journalism-computational-methods-in-the-civic-sphere/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2020/05/29/p1-html-parsing-for-pup=stanford-journalism-computational-methods-in-the-civic-sphere/</guid>
        
        
      </item>
    
      <item>
        <title>HowTo: Open support questions tagged escalate</title>
        <description>&lt;h1 id=&quot;pontifications&quot;&gt;Pontifications&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Here’s how to open  support questions tagged &lt;code class=&quot;highlighter-rouge&quot;&gt;escalate&lt;/code&gt; in your browser&lt;/li&gt;
  &lt;li&gt;First, get the questions by updated time i.e. updated may 28, 2020 and then open them in wsl&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;../get-by-updated-time-question-url-answers-for-arbitrary-time-period.rb 2020 5 28 2020 5 28 
&lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;escalate;&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
updated-2020-05-28-2020-05-28-ff-desktop-creator-answers-desktop-all-locales.csv&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
| &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'^[0-9]*'&lt;/span&gt; |&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
xargs &lt;span class=&quot;nt&quot;&gt;-I&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; 1 wsl-open &lt;span class=&quot;s2&quot;&gt;&quot;https://support.mozilla.org/questions/&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;where:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;xargs -I {&lt;/code&gt;} save the string passed in as &lt;code class=&quot;highlighter-rouge&quot;&gt;{}&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;^[0-9]*'&lt;/code&gt; is a regular expression meaning match numbers at the beginning of the line  until a non number is reached i.e. the &lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt; field which is an integer and is the first field&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;related post from yesterday: &lt;a href=&quot;http://rolandtanglao.com/2020/05/27/p1-howto-open-random-25-percent-of-support-questions/&quot;&gt;HowTo: Open a random 25% of support questions using shuf and awk and wsl-open&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 28 May 2020 00:00:00 -0700</pubDate>
        <link>http://rolandtanglao.com/2020/05/28/p1-howto-open-recently-updated-questions-with-escalate-tag/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2020/05/28/p1-howto-open-recently-updated-questions-with-escalate-tag/</guid>
        
        
      </item>
    
      <item>
        <title>HowTo: Open a random 25% of support questions using shuf and awk and wsl-open</title>
        <description>&lt;h1 id=&quot;pontifications&quot;&gt;Pontifications&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Here’s how to open a random 25% of support questions using &lt;code class=&quot;highlighter-rouge&quot;&gt;shuf&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;wsl-open&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'https*://support.mozilla.org/questions/[^)]*'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
super-long-file-name-of-firefox-desktop-support-questions.md&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
| &lt;span class=&quot;nb&quot;&gt;shuf&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'NR % 4 == 0'&lt;/span&gt; | xargs &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; 1 wsl-open
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;super-long-file-name-of-firefox-desktop-support-questions.md&lt;/code&gt; is:&lt;code class=&quot;highlighter-rouge&quot;&gt;sorted-all-desktop-en-us-2020-05-26-2020-05-26-firefox-creator-answers-desktop-all-locales.md&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;grep -o&lt;/code&gt; just return the matching text&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;https*://support.mozilla.org/questions/[^)]*&lt;/code&gt; since we’re matching markdown links match until you encounter a &lt;code class=&quot;highlighter-rouge&quot;&gt;)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%4 == 0&lt;/code&gt; every 4th, isn’t awk wonderful :-) ?&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;xargs -n 1&lt;/code&gt; run the next command which in this case is &lt;code class=&quot;highlighter-rouge&quot;&gt;wsl-open&lt;/code&gt; with 1 argument at a time&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 27 May 2020 00:00:00 -0700</pubDate>
        <link>http://rolandtanglao.com/2020/05/27/p1-howto-open-random-25-percent-of-support-questions/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2020/05/27/p1-howto-open-random-25-percent-of-support-questions/</guid>
        
        
      </item>
    
      <item>
        <title>HowTo: SQLite SQL query to get all May 1-25, 2020 Firefox desktop en-us questions that contain sync in title, content or tags columns</title>
        <description>&lt;h1 id=&quot;pontifications&quot;&gt;Pontifications&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Here’s the &lt;a href=&quot;https://roland-ds1.glitch.me/data?sql=select%0D%0A++created%2C%0D%0A++url%2C%0D%0A++title%2C%0D%0A++content%2C%0D%0A++tags%0D%0Afrom%0D%0A++%5Bsorted-all-desktop-en-us-2020-01-01-2020-05-25-firefox-creator-answers-desktop-all-locales%5D%0D%0Awhere%0D%0A++%22created%22+%3E%3D+%3Ap2%0D%0A++and+%22created%22+%3C+%3Ap3%0D%0A++AND+%28+%22content%22+like+%3Ap0%0D%0A++or+%22tags%22+like+%3Ap4%0D%0A++or+%22title%22+like+%3Ap6%29%0D%0Aorder+by%0D%0A++rowid%0D%0Alimit%0D%0A++1000&amp;amp;p2=2020-04-30+16%3A00%3A00&amp;amp;p3=2020-05-26+00%3A00%3A00&amp;amp;p0=%25sync%25&amp;amp;p4=%25sync%25&amp;amp;p6=%25sync%25&quot;&gt;SQL query&lt;/a&gt; from roland-ds1.glitch.me from the previous post, &lt;a href=&quot;http://rolandtanglao.com/2020/05/25/p2-glitch-datasette-firefox-desktop-support-january1-may25-2020/&quot;&gt;HowTo: Datasette on Glitch for Firefox Desktop support questions January 1 to May 25, 2020&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;created&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;from&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;desktop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;en&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;us&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2020&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2020&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;05&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;firefox&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;creator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;answers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;desktop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;locales&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;where&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;&quot;created&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;created&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p3&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;content&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;like&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p0&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;tags&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;like&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p4&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;title&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;like&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;rowid&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;limit&lt;/span&gt;
  &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;where:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2020&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;p3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2020&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;05&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;p0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sync&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;p4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sync&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;p6&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sync&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And here’s the &lt;a href=&quot;https://docs.google.com/spreadsheets/d/18UUsBqoOk3GphPqUXQmRm98mIjX8Ut4ggatxDPZimGA/edit?usp=sharing&quot;&gt;CSV file&lt;/a&gt; (as a Google Spreadsheet)&lt;/p&gt;
</description>
        <pubDate>Mon, 25 May 2020 00:00:00 -0700</pubDate>
        <link>http://rolandtanglao.com/2020/05/25/p3-sqlite-sql-query-to-get-all-questions-01may2020-25may2020-title-tag-content-contain-sync/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2020/05/25/p3-sqlite-sql-query-to-get-all-questions-01may2020-25may2020-title-tag-content-contain-sync/</guid>
        
        
      </item>
    
      <item>
        <title>HowTo: Datasette on Glitch for Firefox Desktop support questions January 1 to May 25, 2020</title>
        <description>&lt;h1 id=&quot;pontifications&quot;&gt;Pontifications&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;HowTo put the Firefox support questions on glitch from January 1-May 25, 2020&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;1. get the questions in CSV format into a file called sorted-all-desktop-en-us-2020-01-01-2020-05-25-firefox-creator-answers-desktop-all-locales into a file called &lt;a href=&quot;https://github.com/rtanglao/rt-kits-api2/blob/master/2020BYMONTH/sorted-all-desktop-en-us-2020-01-01-2020-05-25-firefox-creator-answers-desktop-all-locales.csv&quot;&gt;sorted-all-desktop-en-us-2020-01-01-2020-05-25-firefox-creator-answers-desktop-all-locales.csv&lt;/a&gt; :&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /home/roland/GIT/rt-kits-api2/2020BYMONTH
../get-creator-answers-questions-for-arbitrary-time-period.rb 2020 1 1 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
2020 5 25
../print-desktop-en-us-all-oses-increasing-ids-time-url-title-content.rb &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
2020-01-01-2020-05-25-firefox-creator-answers-desktop-all-locales.csv csv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;2.  Per &lt;a href=&quot;https://simonwillison.net/2019/Apr/23/datasette-glitch/&quot;&gt;Running Datasette on glitch&lt;/a&gt;:
    &lt;ul&gt;
      &lt;li&gt;“visit https://glitch.com/edit/#!/remix/datasette-csvs right now, drag-and-drop in a CSV file and watch it get served by Datasette on Glitch just a few seconds later.”&lt;/li&gt;
      &lt;li&gt;In my case I dragged and dropped  &lt;a href=&quot;https://github.com/rtanglao/rt-kits-api2/blob/master/2020BYMONTH/sorted-all-desktop-en-us-2020-01-01-2020-05-25-firefox-creator-answers-desktop-all-locales.csv&quot;&gt;sorted-all-desktop-en-us-2020-01-01-2020-05-25-firefox-creator-answers-desktop-all-locales.csv&lt;/a&gt; into my cloned glitch instance and renamed it: &lt;a href=&quot;https://roland-ds1.glitch.me/&quot;&gt;https://roland-ds1.glitch.me/&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;And then you can do all your SQL queries goodness :-)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Mon, 25 May 2020 00:00:00 -0700</pubDate>
        <link>http://rolandtanglao.com/2020/05/25/p2-glitch-datasette-firefox-desktop-support-january1-may25-2020/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2020/05/25/p2-glitch-datasette-firefox-desktop-support-january1-may25-2020/</guid>
        
        
      </item>
    
      <item>
        <title>Cúagilákv Jess Housty: Find Your Pod in in The Tyee</title>
        <description>&lt;h1 id=&quot;pontifications&quot;&gt;Pontifications&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;QUOTE&lt;/strong&gt;–&amp;gt; Sometimes building community is about exercising vulnerability and  allowing yourself to be cared for. Sometimes it’s about power and  wielding it in a way that it shelters your kin. As you reflect on your  own life, ask yourself where your strongest sense of connection is  rooted. Find the analogue in your life that parallels what the  hḷ́x̌ʔínúx̌v, what the orca, is to me. Wear that sense of connection  boldly, like a gleaming white saddle patch. Find your pod. And in the  sense of purpose and resilience that community responsibility generates, know that you have power. &amp;lt;– &lt;strong&gt;END QUOTE&lt;/strong&gt; Read the whole thing: &lt;a href=&quot;https://thetyee.ca/Culture/2020/05/25/Find-Your-Pod/?utm_source=twitter&amp;amp;utm_medium=social&amp;amp;utm_content=052520-1&amp;amp;utm_campaign=editorial-0520&quot;&gt;Cúagilákv Jess Housty: Find Your Pod in in The Tyee&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 25 May 2020 00:00:00 -0700</pubDate>
        <link>http://rolandtanglao.com/2020/05/25/p1-c%C3%BAagil%C3%A1kv-jess-housty-the-pod-the-tyee/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2020/05/25/p1-c%C3%BAagil%C3%A1kv-jess-housty-the-pod-the-tyee/</guid>
        
        
      </item>
    
      <item>
        <title>Maarten Lambrechts: How to Make Animated Histograms in R, with ggplot and gganimate</title>
        <description>&lt;h1 id=&quot;pontifications&quot;&gt;Pontifications&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;QUOTE&lt;/strong&gt; –&amp;gt; Animating a ggplot visualization with gganimate can be as simple as  adding one gganimate function. Even more complex visualisations, with  multiple geoms and facetting for example, are no problem for gganimate.&lt;/p&gt;

    &lt;p&gt;But if you want to animate between multiple states, you need to  provide data for the intermediate states, which might mean reshaping  your data.&lt;/p&gt;

    &lt;p&gt;This tutorial only scratched the surface of what gganimate is capable of. &amp;lt;– &lt;strong&gt;END QUOTE&lt;/strong&gt; –&amp;gt; Read the whole thing: &lt;a href=&quot;https://flowingdata.com/2020/05/13/animated-histograms-ggplot-gganimate/&quot;&gt;Maarten Lambrechts: How to Make Animated Histograms in R, with ggplot and gganimate&lt;/a&gt; &amp;lt;— a fantastic tutorial well worth the $10/month subscription fee&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 22 May 2020 00:00:00 -0700</pubDate>
        <link>http://rolandtanglao.com/2020/05/22/p1-maarten-lambrechts-howto-animated-histograms-r-ggplot-gganimate/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2020/05/22/p1-maarten-lambrechts-howto-animated-histograms-r-ggplot-gganimate/</guid>
        
        
      </item>
    
      <item>
        <title>hauntsaninja via simon willison: pyp: Easily run Python at the shell</title>
        <description>&lt;h1 id=&quot;pontifications&quot;&gt;Pontifications&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;QUOTE&lt;/strong&gt; –&amp;gt;   Fascinating little CLI utility which uses some deeply clever AST  introspection to enable little Python one-liners that act as  replacements for all manner of pipe-oriented unix utilities. Took me a  while to understand how it works from the README, but then I looked at  the code and the entire thing is only 380 lines long. There’s also a  useful –explain option which outputs the Python source code that it  would execute for a given command. &lt;strong&gt;END QUOTE&lt;/strong&gt; &amp;lt;— Read &lt;a href=&quot;https://simonwillison.net/2020/May/9/pyp/&quot;&gt;Simon Willison’s blog post&lt;/a&gt; and check out &lt;a href=&quot;https://github.com/hauntsaninja/pyp&quot;&gt;hauntsaninja’s pyp&lt;/a&gt; which is “Magical, but never mysterious.” &amp;lt;— Right as if introspection and the AST is never both magical and mysterious :-)&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 21 May 2020 00:00:00 -0700</pubDate>
        <link>http://rolandtanglao.com/2020/05/21/p1-pyp-hauntsaninja-easily-run-python-from-the-shell/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2020/05/21/p1-pyp-hauntsaninja-easily-run-python-from-the-shell/</guid>
        
        
      </item>
    
      <item>
        <title>Dave Pollard: There must be a better way</title>
        <description>&lt;h1 id=&quot;pontifications&quot;&gt;Pontifications&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;QUOTE&lt;/strong&gt; –&amp;gt; We have forgotten that the need of the person drilling into wood to make a piece of art or craft is &lt;em&gt;not&lt;/em&gt; for a drill — faster, quieter, more efficient, or more ergonomic. It is for a &lt;em&gt;hole&lt;/em&gt;. If we want to escape imaginative poverty, we are going to have to relearn and re-practice imagining &lt;em&gt;how else we might meet the need for a hole&lt;/em&gt;, rather than how we might add “features” to the drill, or connect it to  the internet to do something flashy that could not be done otherwise,  just to produce &lt;em&gt;the same damn hole&lt;/em&gt;. In many industries, what is called “innovation” has forsaken responding to what is &lt;em&gt;needed&lt;/em&gt; in favour of what is &lt;em&gt;possible&lt;/em&gt; (which requires much less imagination). &lt;strong&gt;END QUOTE&lt;/strong&gt; &amp;lt;— Read the whole thing: &lt;a href=&quot;https://howtosavetheworld.ca/2020/05/19/there-must-be-a-better-way/&quot;&gt;Dave Pollard: There must be a better way&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 20 May 2020 00:00:00 -0700</pubDate>
        <link>http://rolandtanglao.com/2020/05/20/p1-dave-pollard-there-must-be-a-better-way/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2020/05/20/p1-dave-pollard-there-must-be-a-better-way/</guid>
        
        
      </item>
    
      <item>
        <title>Create a SQLite database from a kitsune question CSV file</title>
        <description>&lt;h1 id=&quot;pontifications&quot;&gt;Pontifications&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;from the repo: &lt;a href=&quot;https://github.com/rtanglao/rt-kitsune-sqlite/blob/master/README.md&quot;&gt;rt-kitsune-sqlite&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;1. get the questions&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl https://raw.githubusercontent.com/rtanglao/rt-kits-api2/master/2020BYMONTH/sorted-all-desktop-en-us-2020-04-01-2020-04-30-firefox-creator-answers-desktop-all-locales.csv&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; april2020-ff-desktop-aaq-questions.csv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;2. &lt;del&gt;use a text editor and change ‘ -0800’ to ‘-0800’ (remove space)&lt;/del&gt; - actually you don’t need to do this, just add “ %Z” in step 3&lt;/li&gt;
  &lt;li&gt;3. generate the database
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;csvs-to-sqlite &lt;span class=&quot;nt&quot;&gt;-dt&lt;/span&gt; created &lt;span class=&quot;nt&quot;&gt;-df&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;%Y-%m-%d %H:%M:%S %Z&quot;&lt;/span&gt; april2020-ff-desktop-aaq-questions.csv april2020-ff-desktop-aaq-questions.db
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;4. do a sample query&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;sqlite3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;april2020&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ff&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;desktop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aaq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;questions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;csv&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;april2020&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ff&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;desktop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aaq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;questions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;april2020-ff-desktop-aaq-questions&quot;&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;created&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'2020-04-02T00:00:01-00:00'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;april2020-ff-desktop-aaq-questions&quot;&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;like&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;%sync%&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OR&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;like&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;%sync%&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OR&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;like&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;%sync%&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Mon, 18 May 2020 00:00:00 -0700</pubDate>
        <link>http://rolandtanglao.com/2020/05/18/p1-kitsune-questions-csv-to-sqlite/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2020/05/18/p1-kitsune-questions-csv-to-sqlite/</guid>
        
        
      </item>
    
  </channel>
</rss>
