<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Roland Tanglao</title>
    <description>flickr.com/roland, twitter.com/rtanglao #firefox #thunderbird
</description>
    <link>http://rolandtanglao.com/</link>
    <atom:link href="http://rolandtanglao.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 26 Nov 2019 05:31:40 -0800</pubDate>
    <lastBuildDate>Tue, 26 Nov 2019 05:31:40 -0800</lastBuildDate>
    <generator>Jekyll v4.0.0</generator>
    
      <item>
        <title>Emma Humphries: Extracting a list from a webpage</title>
        <description>&lt;h1 id=&quot;pontifications&quot;&gt;Pontifications&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;You have a webpage with a list of things: values, prices, emails, or  links. And you want to copy that into a string you can use elsewhere  like a spreadsheet or data....There’s not an API you can use to fetch these. You know that you can  construct a CSS3 selector to get them all. So you can use the developer  view of the page (a.k.a. F12) and use JavaScript on the console tab as  your ‘API’.&lt;/code&gt;Read the whole fabulous thing: &lt;a href=&quot;https://emmas.site/blog/2019/09/10/extracting-a-list-from-a-webpage&quot;&gt;Extracting a list from a webpage&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Wouldn’t it be great if there was an easier way to do this? That normal people can use?&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 26 Nov 2019 00:00:00 -0800</pubDate>
        <link>http://rolandtanglao.com/2019/11/26/p1-zazzle-berlin-july-2019-info-graphic-circular-150-pixel-thumbnails/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2019/11/26/p1-zazzle-berlin-july-2019-info-graphic-circular-150-pixel-thumbnails/</guid>
        
        
      </item>
    
      <item>
        <title>Emma Humphries: Extracting a list from a webpage</title>
        <description>&lt;h1 id=&quot;pontifications&quot;&gt;Pontifications&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;You have a webpage with a list of things: values, prices, emails, or  links. And you want to copy that into a string you can use elsewhere  like a spreadsheet or data....There’s not an API you can use to fetch these. You know that you can  construct a CSS3 selector to get them all. So you can use the developer  view of the page (a.k.a. F12) and use JavaScript on the console tab as  your ‘API’.&lt;/code&gt;Read the whole fabulous thing: &lt;a href=&quot;https://emmas.site/blog/2019/09/10/extracting-a-list-from-a-webpage&quot;&gt;Extracting a list from a webpage&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Wouldn’t it be great if there was an easier way to do this? That normal people can use?&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 25 Nov 2019 00:00:00 -0800</pubDate>
        <link>http://rolandtanglao.com/2019/11/25/p1-howto-use-firefox-developer-tools-to-extract-list-from-webpage/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2019/11/25/p1-howto-use-firefox-developer-tools-to-extract-list-from-webpage/</guid>
        
        
      </item>
    
      <item>
        <title>What is your happy non tech place? Mine is cross-country skiing, taking photos (not editing them), bicycling and walking with my family</title>
        <description>&lt;h1 id=&quot;pontification&quot;&gt;Pontification&lt;/h1&gt;

&lt;p&gt;&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; data-footer=&quot;true&quot; href=&quot;https://www.flickr.com/photos/roland/49113371461/in/dateposted/&quot; title=&quot;IMG_20191123_124240_944&quot;&gt;&lt;img src=&quot;https://live.staticflickr.com/65535/49113371461_3d10a4df6b.jpg&quot; width=&quot;500&quot; height=&quot;500&quot; alt=&quot;IMG_20191123_124240_944&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Cross-country skiing is such a happy place for me (and our entire family; so lucky to have found something we all love to do and to do together!&lt;/li&gt;
  &lt;li&gt;So is taking photos (not editing them except for fast edits in RNI films )&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.flickr.com/photos/roland/tags/changeyourliferideabike&quot;&gt;Bicycling&lt;/a&gt; of course!&lt;/li&gt;
  &lt;li&gt;And finally walking&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sun, 24 Nov 2019 00:00:00 -0800</pubDate>
        <link>http://rolandtanglao.com/2019/11/24/p1-what-is-your-happy-non-tech-place/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2019/11/24/p1-what-is-your-happy-non-tech-place/</guid>
        
        
      </item>
    
      <item>
        <title>Ink and Switch - Local First Software</title>
        <description>&lt;h1 id=&quot;pontification&quot;&gt;Pontification&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; &quot;Today it is easy to create a web application in which the server takes  ownership of all the data. But it is too hard to build collaborative  software that respects users’ ownership and agency. In order to shift  the balance, we need to improve the tools for developing local-first  software.&quot;&lt;/code&gt;&amp;lt;—- Read the whole thing: &lt;a href=&quot;https://www.inkandswitch.com/local-first.html&quot;&gt;Ink and Switch - Local First Software&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 23 Nov 2019 00:00:00 -0800</pubDate>
        <link>http://rolandtanglao.com/2019/11/23/p1-ink-and-switch-local-first-software/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2019/11/23/p1-ink-and-switch-local-first-software/</guid>
        
        
      </item>
    
      <item>
        <title>Kitsune Questions and Answers API to CSV with tests</title>
        <description>&lt;h1 id=&quot;pontification&quot;&gt;Pontification&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Following on from yesterday’s &lt;a href=&quot;http://rolandtanglao.com/2019/11/21/p1-kitsune-api-tester/&quot;&gt;NICE TO HAVE: Kitsune questions and answers API tester&lt;/a&gt;, the next logical step is something that reads the Kitsune API for questions and answers, converts it to CSV and has unit tests to insure it is working.&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 22 Nov 2019 00:00:00 -0800</pubDate>
        <link>http://rolandtanglao.com/2019/11/22/p1-kitsune-question-answer-api-to-csv-with-tests/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2019/11/22/p1-kitsune-question-answer-api-to-csv-with-tests/</guid>
        
        
      </item>
    
      <item>
        <title>NICE TO HAVE: Kitsune questions and answers API tester</title>
        <description>&lt;h1 id=&quot;pontifications&quot;&gt;Pontifications&lt;/h1&gt;

&lt;p&gt;Checker 1 of the Kitsune &lt;a href=&quot;https://github.com/rtanglao/rt-kitsune-api/blob/master/sample-question-api-result.md&quot;&gt;questions&lt;/a&gt; and &lt;a href=&quot;https://github.com/rtanglao/rt-kitsune-api/blob/master/answerTestAPI.rb&quot;&gt;answers&lt;/a&gt; API. Call the API  and then&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Check that every field is present and new fields haven’t been added or old fields deleted&lt;/li&gt;
  &lt;li&gt;Check every field’s type is correct, string, date, integer&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Checker 2&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Check a specific question and specific answer and ensure all values are correct&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Thu, 21 Nov 2019 00:00:00 -0800</pubDate>
        <link>http://rolandtanglao.com/2019/11/21/p1-kitsune-api-tester/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2019/11/21/p1-kitsune-api-tester/</guid>
        
        
      </item>
    
      <item>
        <title>Ilya Kreymer's Client-Side Replay Technology: using service workers to emulate web servers in web browsers</title>
        <description>&lt;h1 id=&quot;pontifications&quot;&gt;Pontifications&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;But what if it were possible to ‘render’ an arbitrary web archive, directly in the browser, just as easily as it is to view a video or a PDF?&quot;&lt;/code&gt; &amp;lt;- from Guest post: DSHR’s Blog &lt;a href=&quot;https://blog.dshr.org/2019/10/guest-post-ilya-kreymers-client-side.html&quot;&gt;Ilya Kreymer’s Client-Side Replay Technology&lt;/a&gt;! Read the whole thing!&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 20 Nov 2019 00:00:00 -0800</pubDate>
        <link>http://rolandtanglao.com/2019/11/20/p1-client-side-replay-using-service-workers-to-emulate-web-servers-in-web-browsers/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2019/11/20/p1-client-side-replay-using-service-workers-to-emulate-web-servers-in-web-browsers/</guid>
        
        
      </item>
    
      <item>
        <title>Hannah Howard: Why do we only care about programmers?</title>
        <description>&lt;h1 id=&quot;pontifications&quot;&gt;Pontifications&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;Though I’ve only been part of the programming class a short time, it’s hard for me not to recognize that most of the positions I’ve been employed in before were nonetheless quite privileged. While the retail store’s salaries were weak, the health benefits were amazing. When I inquired about the security guards who worked at the store, I learned they were subcontracted through another company and they didn’t get any of the benefits I got.&quot;&lt;/code&gt; &amp;lt;- from Hannah Howard’s &lt;a href=&quot;https://modelviewculture.com/pieces/why-do-we-only-care-about-programmers&quot;&gt;Why do we only care about programmers&lt;/a&gt;? Read the whole thing!&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Tue, 19 Nov 2019 00:00:00 -0800</pubDate>
        <link>http://rolandtanglao.com/2019/11/19/p1-why-do-we-only-care-about-programmers/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2019/11/19/p1-why-do-we-only-care-about-programmers/</guid>
        
        
      </item>
    
      <item>
        <title>Backed Bangle.js: the hackable Smart Watch</title>
        <description>&lt;h1 id=&quot;pontifications&quot;&gt;Pontifications&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Backed: &lt;a href=&quot;https://www.kickstarter.com/projects/gfw/banglejs-the-hackable-smart-watch&quot;&gt;Bangle.js: the hackable Smart Watch&lt;/a&gt; (via &lt;a href=&quot;https://twitter.com/triagegirl/status/1194863036864987137&quot;&gt;Emma&lt;/a&gt;). It’s the same as the nodewatch which was given to 400 nodeconf eu attendees recently. And it’s open source!&lt;/li&gt;
  &lt;li&gt;It seems to have most  (except WiFi) of what I blogged about previously:  &lt;a href=&quot;http://rolandtanglao.com/2019/11/13/p1-someday-i-will-have-open-source-watch-on-my-wrist/&quot;&gt;Someday I’ll wear an open source watch running my own software on my wrist perhaps a future version of DSTIKE ESP32 Watch DevKit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 18 Nov 2019 00:00:00 -0800</pubDate>
        <link>http://rolandtanglao.com/2019/11/18/p1-nodewatch-banglejs-the-hackable-smart-watch/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2019/11/18/p1-nodewatch-banglejs-the-hackable-smart-watch/</guid>
        
        
      </item>
    
      <item>
        <title>Possible Berlin 2020 Mozilla All Hands Swag: Berlin circular cropped photos on the back, contributor infographic on the front</title>
        <description>&lt;h1 id=&quot;pontifications&quot;&gt;Pontifications&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;On the back: &lt;a href=&quot;http://rolandtanglao.com/2019/08/18/p1-use-imagemagick-vignette-to-do-circular-crop/&quot;&gt;use imagemagick to make a  circular crop&lt;/a&gt; of my &lt;a href=&quot;https://www.flickr.com/photos/roland/albums/72157709917594396&quot;&gt;Berlin July 2019 photos&lt;/a&gt; spelling out “Berlin 2020”.  Randomly select 75x75 patches and apply a” circular crop to them.&lt;/li&gt;
  &lt;li&gt;On the front, make graphics from contributors’ &lt;a href=&quot;https://github.com/rtanglao/rt-kits-api2/blob/master/print-desktop-contributors.rb&quot;&gt;answers&lt;/a&gt; on SUMO spelling out “Firefox Support” or some such.
    &lt;ul&gt;
      &lt;li&gt;Perhaps a 26 colour infographic (do a &lt;code class=&quot;highlighter-rouge&quot;&gt;mod 26&lt;/code&gt; on each character of an answer?!?!)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 17 Nov 2019 00:00:00 -0800</pubDate>
        <link>http://rolandtanglao.com/2019/11/17/p1-berlin-infographic-2019-2020-for-mozilla-swag/</link>
        <guid isPermaLink="true">http://rolandtanglao.com/2019/11/17/p1-berlin-infographic-2019-2020-for-mozilla-swag/</guid>
        
        
      </item>
    
  </channel>
</rss>
