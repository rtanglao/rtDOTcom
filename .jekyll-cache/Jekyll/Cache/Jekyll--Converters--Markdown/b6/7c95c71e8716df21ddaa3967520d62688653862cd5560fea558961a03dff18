I"!<ul>
  <li>
    <p>Please refer to my previous post: <a href="http://rolandtanglao.com/2020/10/23/p1-barcode-ggplot2-case-when-map2/">R and ggplot2 barcode of Firefox questions using no for loop - more optimizations, case‚Ä¶when, map2 and how it works</a></p>
  </li>
  <li>
    <p>I took <a href="https://github.com/rtanglao/rt-r-ggplot2-ruby-experiments/blob/main/no-for-loop-ff-question-barcode.R">no-for-loop-ff-question-barcode.R</a> and made an hourly version that takes as an input the daily question file and the hour (0-23) and called it,  <a href="">hourly-ff-question-barcode.R</a>  and here is the code:
```r
#!/usr/bin/env Rscript
library(tidyverse)
library(tibbletime)
library(lubridate)</p>
  </li>
</ul>

<p>colours_array &lt;- colours()</p>

<p>getOSColour &lt;- function(.x) { 
  case_when(
    str_detect(.x, ‚Äúmac-os|os-x|osx|macos‚Äù) ~ ‚Äúblue‚Äù,
    str_detect(.x, ‚Äúlinux|ubuntu|redhat|debian‚Äù) ~ ‚Äúgreen‚Äù,
    str_detect(.x, ‚Äúwindows-7|windows-8|windows-10‚Äù) ~ ‚Äúhotpink‚Äù,
    TRUE ~ ‚Äúpurple‚Äù)
}</p>

<p>initial.options &lt;- commandArgs(trailingOnly = FALSE)
file.arg.name &lt;- ‚Äú‚Äìfile=‚Äù
script.name &lt;- sub(file.arg.name, ‚Äú‚Äù, initial.options[grep(file.arg.name, initial.options)])
script.basename &lt;- dirname(script.name)</p>

<p>args &lt;- commandArgs(TRUE)
year = as.integer(args[1])
month = as.integer(args[2])
day = as.integer(args[3])
hour = as.integer(args[4])</p>

<h2 id="default-setting-when-no-arguments-passed">Default setting when no arguments passed</h2>
<p>if (length(args) &lt; 4) {
  args &lt;- c(‚Äú‚Äìhelp‚Äù)
} else {
  if (hour &lt; 0 || hour &gt; 23 || 
      year &lt; 2010 || 
      month &lt; 0 || month &gt; 12) {
    args &lt;- c(‚Äú‚Äìhelp‚Äù)
  }
}</p>

<p>if (‚Äú‚Äìhelp‚Äù %in% args) {
  cat(
    ‚Äú
    Arguments:
    year
    month
    day
    hour (0-23)
    ‚Äìhelp              - print this text
    Example:‚Äù)
    cat(paste(‚ÄúRscript‚Äù, script.name, ‚Äú2020 10 20 23\n\n‚Äù))
  q(save = ‚Äúno‚Äù)
}
print(script.name)</p>

<p>main &lt;- function() {
  filename &lt;- sprintf(
  ‚Äú%4.4d-%2.2d-%2.2d-%4.4d-%2.2d-%2.2d-firefox-creator-answers-desktop-all-locales.csv‚Äù,
  year, month, day, year, month, day)</p>

<p>csv &lt;- read_csv(filename)
  # data frame needs to be in ascending order instead of descending
  reverse_csv &lt;- csv %&gt;% map_df(rev)
  csv_time &lt;- reverse_csv %&gt;%
    mutate(created_time = parse_date_time(created, orders = ‚ÄúymdHMSz‚Äù))
  csv_tt &lt;- as_tbl_time(csv_time, index = created_time)
  time_filter_str &lt;- paste0(args[1], ‚Äú-‚Äú, args[2], ‚Äú-‚Äú, args[3], ‚Äú ‚Äú, args[4])
  hourly_csv &lt;- csv_tt %&gt;%
    filter_time(time_filter_str ~ time_filter_str)</p>

<p>length &lt;- nrow(hourly_csv)
  options(tibble.width = Inf)
  print(hourly_csv)
  xintercept &lt;- seq.int(by = 10,
                        length = length * 2,
                        from = 0)
  size &lt;- rep(c(4, 2), length = length * 2)
  os_colours_vector &lt;- map_chr(hourly_csv$tags, getOSColour)
  question_colours_vector &lt;- map2_chr(hourly_csv$title,
                                      hourly_csv$content,
                                      ~ {
                                        colours_array[(abs(digest::digest2int(paste(.x, .y))) %% 657) + 1]
                                      })
  colours_vector &lt;-
    c(rbind(os_colours_vector, question_colours_vector))
  p &lt;- ggplot() + theme_void()
  p &lt;- p + geom_vline(col = colours_vector,
                      xintercept = xintercept,
                      size = size)
  png_filename &lt;- sprintf(
    ‚Äúhour-%2.2d-%4.4d-%2.2d-%2.2d-firefox-desktop-all-locales.png‚Äù,
    hour, year, month, day, year, month, day)
  ggsave(png_filename, p, width = 3.555555556, height = 3.555555556, 
         dpi = 72, limitsize = FALSE) # 3.555555556 = 256/72dpi
  warnings()</p>

<p>}</p>

<p>sink(‚Äúlog.txt‚Äù)
main()
sink()</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
* Then I ran it for all 24 hours of October 20, 2020 as follows:
```bash
for h in {0..23} do 
  Rscript ../hourly-ff-question-barcode.R 2020 10 20 $h 
done
</code></pre></div></div>

<ul>
  <li>This produced these files (see <a href="https://github.com/rtanglao/rt-r-ggplot2-ruby-experiments/blob/main/INFOGRAPHICS/20october2020hour-files.txt">20october2020hour-files.txt</a>):
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>hour-00-2020-10-20-firefox-desktop-all-locales.png
hour-01-2020-10-20-firefox-desktop-all-locales.png
hour-02-2020-10-20-firefox-desktop-all-locales.png
hour-03-2020-10-20-firefox-desktop-all-locales.png
hour-04-2020-10-20-firefox-desktop-all-locales.png
hour-05-2020-10-20-firefox-desktop-all-locales.png
hour-06-2020-10-20-firefox-desktop-all-locales.png
hour-07-2020-10-20-firefox-desktop-all-locales.png
hour-08-2020-10-20-firefox-desktop-all-locales.png
hour-09-2020-10-20-firefox-desktop-all-locales.png
hour-10-2020-10-20-firefox-desktop-all-locales.png
hour-11-2020-10-20-firefox-desktop-all-locales.png
hour-12-2020-10-20-firefox-desktop-all-locales.png
hour-13-2020-10-20-firefox-desktop-all-locales.png
hour-14-2020-10-20-firefox-desktop-all-locales.png
hour-15-2020-10-20-firefox-desktop-all-locales.png
hour-16-2020-10-20-firefox-desktop-all-locales.png
hour-17-2020-10-20-firefox-desktop-all-locales.png
hour-18-2020-10-20-firefox-desktop-all-locales.png
hour-19-2020-10-20-firefox-desktop-all-locales.png
hour-20-2020-10-20-firefox-desktop-all-locales.png
hour-21-2020-10-20-firefox-desktop-all-locales.png
hour-22-2020-10-20-firefox-desktop-all-locales.png
hour-23-2020-10-20-firefox-desktop-all-locales.png
</code></pre></div>    </div>
  </li>
  <li>
    <p>Which I then collaged/montaged into 2x12: row 1 is 0-12, row 2 is 13-23 as follows:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> magick montage <span class="nt">-verbose</span> <span class="nt">-adjoin</span> <span class="nt">-tile</span> 12x2 +frame +shadow +label <span class="nt">-adjoin</span> <span class="nt">-geometry</span> <span class="s2">"256x256+0+0&lt;"</span> @20october2020hour-files.txt 20october2020-ff-questions-by-hour.png
</code></pre></div>    </div>
  </li>
  <li>
    <p>Which results in the following output:
<a data-flickr-embed="true" href="https://www.flickr.com/photos/roland/50539241276/in/album-72157716643777623/" title="20october2020-ff-questions-by-hour"><img src="https://live.staticflickr.com/65535/50539241276_a276ba3710.jpg" width="500" height="83" alt="20october2020-ff-questions-by-hour" /></a><script async="" src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"></script></p>
  </li>
  <li>
    <p>This would make a super cool graphic for tshirts and what not if I ran it for all 365 days of 2020 right?</p>
  </li>
  <li>Or even 2019?</li>
</ul>
:ET