I"è<p><a href="http://rolandtanglao.com/2020/07/29/p1-blogthis-checkvist-list-links-to-blog/">Discovered</a>: Oct 14, 2025 15:55 (UTC)<a href="https://chelseatroy.com/2025/07/14/what-can-we-expect-of-llms-as-software-engineers/">ME tl;dr-ing:: investigative skills, Evaluative skills and innovation skills are all things we need to improve to prosper in an LLM enabled world. LLMs have none of these skills ; Chelsea Troy: What can we expect of LLMs as Software Engineers?</a></p>

<h2 id="quote">QUOTE</h2>

<ul>
  <li><a href="https://chelseatroy.com/2025/07/14/what-can-we-expect-of-llms-as-software-engineers/">Chelsea Troy: What can we expect of LLMs as Software Engineers?</a></li>
</ul>

<blockquote>
  <p>Itâ€™s also unlikely to surprise you that they fail students when the code base the student is working on exceeds about 300 lines. To use them most effectively, students must first write COHESIVE codeâ€”code in which the concepts that must be understood together live togetherâ€”and recognizing patterns from github does not prepare a tool to generate this type of code. The specific cohesive part on which a student needs help then needs to be entered into the tool in isolation.</p>
</blockquote>

<blockquote>
  <p>These things only become more true as the code base increases in complexity. I wrote a compiler in Rust earlier this yearâ€”a language I donâ€™t know especially wellâ€”to better understand the experiences of my students trying to use LLMs to build projects in Python. Iâ€™d say the LLM reduced the amount of physical typing I needed to do by 95%. Iâ€™d say it reduced the amount I needed to know, about the implementation details of compilers as well as the characteristics of Rust, in order to get my compiler working correctly, by about 5%.</p>
</blockquote>

<blockquote>
  <p>â€¦</p>
</blockquote>

<blockquote>
  <p>The first skill set is investigative skills: we need to be able to scope down the area in which we are facing a problem, and learn to ask specific questions about how our assumptions differ from the ground truth.</p>
</blockquote>

<blockquote>
  <p>I find this to be a woefully undertaught and undervalued skill among engineers precisely because we tend to view debugging or familiarizing ourselves with the system weâ€™re working on, not as part of our work, but as a blocking obstacle that distracts from our actual work of plowing through features and system changes. I think this is a deeply flawed way to view our profession, and one made even less accurate than it already was by the advent of tools that can plow through feature development for us, provided we possess the investigative skill set to identify and understand when and how those solutions make inaccurate assumptions or need to be fixed.</p>
</blockquote>

<blockquote>
  <p>â€¦</p>
</blockquote>

<blockquote>
  <p>The second skill set is evaluative skills: we need to be able to select from a range of implementation options based on how those optionsâ€™ benefits and shortcomings fit the bill of our specific situation.</p>
</blockquote>

<blockquote>
  <p>â€¦</p>
</blockquote>

<blockquote>
  <p>I think engineers, particularly at more senior levels, need to take stock of why best practices are what they are, and determine whether those reasons make sense in each situation where theyâ€™re being used.</p>
</blockquote>

<blockquote>
  <p>More granularly, I think it falls to engineers to learn to specify exactly what their decision criteria are, decide explicitly which of those are optimizing criteria and which are satisficing criteria, and document how each of their implementation options stack up against those criteria. An LLM can tell you what most people usually say to do. It canâ€™t tell you what you should do, but the truth is, neither can most human engineers right now. This skill set addresses that.</p>
</blockquote>

<blockquote>
  <p>â€¦</p>
</blockquote>

<blockquote>
  <p>The final skill set is innovation skills: we need to learn to proactively search for the shortcomings of the available options, and consider solutions that havenâ€™t been tried before.</p>
</blockquote>

<blockquote>
  <p>These are precisely the solutions that a Generative AI product cannot produce by handing us a global average of what the internet has to say about a topic. The task falls to us, I am afraid, to understand how our status quo falls short, and figure out what we could change to improve those shortfalls. We need the ability to proactively identify who our systems do not serve, or serve poorly, and why, and how to fix it.</p>
</blockquote>
:ET