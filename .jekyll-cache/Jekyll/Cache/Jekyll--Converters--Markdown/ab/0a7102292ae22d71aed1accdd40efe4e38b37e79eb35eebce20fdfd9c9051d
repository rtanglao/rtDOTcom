I"ç.<ul>
  <li>
    <p>(please refer to my previous post: <a href="http://rolandtanglao.com/2020/10/22/p1-barcode-ggplot2-no-for-loop/">R and ggplot2 barcode of Firefox questions using no for loop just map functions, gain is questionable :-) but worth it in the long run, learned lots from learn to purrr</a></p>
  </li>
  <li>More optimizations:
    <ul>
      <li>i)  added <code class="language-plaintext highlighter-rouge">case_when()</code> which resulted in the deletion of 3 lines of code</li>
      <li>ii) used <code class="language-plaintext highlighter-rouge">map2()</code> which eliminated the lines of code that concatenate <code class="language-plaintext highlighter-rouge">title</code> and <code class="language-plaintext highlighter-rouge">content</code> and gets around the problem that a dataframe when passed to a map function is passed columnwise not rowwise</li>
    </ul>
  </li>
  <li>
    <p>How it works:</p>

    <ul>
      <li>
        <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#first bar is at 10, second is at 20, 3rd is at 30</span><span class="w">
</span><span class="n">xintercept</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">seq.int</span><span class="p">(</span><span class="n">by</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">10</span><span class="p">,</span><span class="w"> </span><span class="n">length</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">length</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="n">from</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0</span><span class="p">)</span><span class="w"> 
</span></code></pre></div>        </div>
      </li>
      <li>
        <div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># bars are alternately 4 wide and 2 wide</span><span class="w">
</span><span class="n">size</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">rep</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="m">4</span><span class="p">,</span><span class="m">2</span><span class="p">),</span><span class="w"> </span><span class="n">length</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">length</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="m">2</span><span class="p">)</span><span class="w"> 
</span></code></pre></div>        </div>
        <p>```</p>
      </li>
      <li>
        <div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># interleave os colour (blue, green, hotpink or purple) s with question colours</span><span class="w">
</span><span class="c1"># e.g. if q1 windows and q2 is mac then the vector is </span><span class="w">
</span><span class="nf">c</span><span class="p">(</span><span class="s2">"hotpink"</span><span class="p">,</span><span class="w"> </span><span class="n">q1colour</span><span class="p">,</span><span class="w"> </span><span class="s2">"blue"</span><span class="p">,</span><span class="w"> </span><span class="n">q2colour</span><span class="p">)</span><span class="w">
</span><span class="n">colours_vector</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="n">rbind</span><span class="p">(</span><span class="n">os_colours_vector</span><span class="p">,</span><span class="w"> </span><span class="n">question_colours_vector</span><span class="p">))</span><span class="w"> 
</span></code></pre></div>        </div>
      </li>
    </ul>
  </li>
  <li>Here‚Äôs the actual code from <a href="https://github.com/rtanglao/rt-r-ggplot2-ruby-experiments/blob/main/no-for-loop-ff-question-barcode.R">no-for-loop-ff-question-barcode.R</a> with further optimizations:</li>
</ul>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">
</span><span class="n">colours_array</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">colours</span><span class="p">()</span><span class="w">

</span><span class="n">getOSColour</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">.x</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w"> 
  </span><span class="n">case_when</span><span class="p">(</span><span class="w">
    </span><span class="n">str_detect</span><span class="p">(</span><span class="n">.x</span><span class="p">,</span><span class="w"> </span><span class="s2">"mac-os|os-x|osx|macos"</span><span class="p">)</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="s2">"blue"</span><span class="p">,</span><span class="w">
    </span><span class="n">str_detect</span><span class="p">(</span><span class="n">.x</span><span class="p">,</span><span class="w"> </span><span class="s2">"linux|ubuntu|redhat|debian"</span><span class="p">)</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="s2">"green"</span><span class="p">,</span><span class="w">
    </span><span class="n">str_detect</span><span class="p">(</span><span class="n">.x</span><span class="p">,</span><span class="w"> </span><span class="s2">"windows-7|windows-8|windows-10"</span><span class="p">)</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="s2">"hotpink"</span><span class="w">
    </span><span class="kc">TRUE</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="s2">"purple"</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">csv</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="s2">"https://raw.githubusercontent.com/rtanglao/rt-kits-api3/main/2020/2020-10-20-2020-10-20-firefox-creator-answers-desktop-all-locales.csv"</span><span class="p">)</span><span class="w">
</span><span class="c1"># see https://stackoverflow.com/questions/39975317/how-to-reverse-the-order-of-a-dataframe-in-r</span><span class="w">
</span><span class="n">reverse_csv</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">csv</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">map_df</span><span class="p">(</span><span class="n">rev</span><span class="p">)</span><span class="w">
</span><span class="n">length</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">nrow</span><span class="p">(</span><span class="n">reverse_csv</span><span class="p">)</span><span class="w">
</span><span class="n">xintercept</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">seq.int</span><span class="p">(</span><span class="n">by</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">10</span><span class="p">,</span><span class="w"> </span><span class="n">length</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">length</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="n">from</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0</span><span class="p">)</span><span class="w">
</span><span class="n">size</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">rep</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="m">4</span><span class="p">,</span><span class="m">2</span><span class="p">),</span><span class="w"> </span><span class="n">length</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">length</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="m">2</span><span class="p">)</span><span class="w">
</span><span class="n">os_colours_vector</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">map_chr</span><span class="p">(</span><span class="n">reverse_csv</span><span class="o">$</span><span class="n">tags</span><span class="p">,</span><span class="w"> </span><span class="n">getOSColour</span><span class="p">)</span><span class="w">
</span><span class="n">question_colours_vector</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">map2_chr</span><span class="p">(</span><span class="n">reverse_csv</span><span class="o">$</span><span class="n">title</span><span class="p">,</span><span class="w">
                                    </span><span class="n">reverse_csv</span><span class="o">$</span><span class="n">content</span><span class="p">,</span><span class="w">
  </span><span class="o">~</span><span class="p">{</span><span class="n">colours_array</span><span class="p">[(</span><span class="nf">abs</span><span class="p">(</span><span class="n">digest</span><span class="o">::</span><span class="n">digest2int</span><span class="p">(</span><span class="n">paste</span><span class="p">(</span><span class="n">.x</span><span class="p">,</span><span class="w"> </span><span class="n">.y</span><span class="p">)))</span><span class="w"> </span><span class="o">%%</span><span class="w"> </span><span class="m">657</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="m">1</span><span class="p">]})</span><span class="w">
</span><span class="n">colours_vector</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="n">rbind</span><span class="p">(</span><span class="n">os_colours_vector</span><span class="p">,</span><span class="w"> </span><span class="n">question_colours_vector</span><span class="p">))</span><span class="w">
</span><span class="n">p</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ggplot</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">theme_void</span><span class="p">()</span><span class="w">
</span><span class="n">p</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">p</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">geom_vline</span><span class="p">(</span><span class="n">col</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">colours_vector</span><span class="p">,</span><span class="w"> 
                    </span><span class="n">xintercept</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">xintercept</span><span class="p">,</span><span class="w"> </span><span class="n">size</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">size</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
:ET