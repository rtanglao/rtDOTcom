I"‘<p>Some many frameworks so little time.  Love to have time to study this; alas I have other things to do :-)</p>

<p>From <a href="http://www.rubyonrails.org/show/HomePage">Rails </a>:</p>
<p><strong>QUOTE</strong></p>
<blockquote>Rails is an open source web-application framework for Ruby. It ships with an answer for every letter in MVC: Action Pack for the Controller and View, Active Record for the Model.

Everything needed to build real-world applications in less lines of code than other frameworks spend setting up their XML configuration files. Like Basecamp, which was launched after 4 KLOCs and two months of developement by a single programmer.

Full-stack: Plenty of Control to View your Models

Being a full-stack framework means that all layers are built to work seamlessly together. That way you Don&#8217;t Repeat Yourself (DRY) and you can use a single language from top to bottom. Everything from templates to control flow to business logic is written in Ruby&#8212;the language of love for industry heavy-weights .

In striving for DRY compliance, Rails shuns configuration files and annotations in favor of reflection and run-time extensions. This means the end of XML files telling a story that has already been told in code. It means no compilation phase: Make a change, see it work. Meta-data is an implementation detail left for the framework to handle.</blockquote>
<p><strong>UNQUOTE</strong></p>

:ET