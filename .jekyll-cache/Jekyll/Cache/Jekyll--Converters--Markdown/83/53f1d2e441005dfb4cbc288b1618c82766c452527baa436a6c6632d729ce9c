I"{.<ul>
  <li>
    <p>(please refer to my previous post: <a href="http://rolandtanglao.com/2020/10/21/p1-barcode-ggplot2-for-loop-kludge/">R and ggplot2 barcode of Firefox questions using a for loop; functional version in next post</a>)</p>
  </li>
  <li>
    <p>Was it worth it? Is code without <code class="language-plaintext highlighter-rouge">for</code> loops better?</p>
  </li>
  <li>
    <p>My answer is no, not for short programs but in the large probably! <a href="http://www.rebeccabarter.com/blog/2019-08-19_purrr/">I learned a lot from Rebecca Barter’s Learn to purrr from 2018</a> in the process! such as:</p>
  </li>
  <li>
    <p>1. The tilde-dot shorthand for functions will come handy in the future! Like ruby blocks, it is more compact to use this for simple functions instead having to write out a function and decide on a parameter name instead of just using <code class="language-plaintext highlighter-rouge">.x</code></p>
  </li>
</ul>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">~</span><span class="p">{</span><span class="n">colours_array</span><span class="p">[(</span><span class="nf">abs</span><span class="p">(</span><span class="n">digest</span><span class="o">::</span><span class="n">digest2int</span><span class="p">(</span><span class="n">.x</span><span class="p">))</span><span class="w"> </span><span class="o">%%</span><span class="w"> </span><span class="m">657</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="m">1</span><span class="p">]})</span><span class="w">
</span></code></pre></div></div>
<ul>
  <li>
    <p>2. map functions like <code class="language-plaintext highlighter-rouge">map_chr()</code> can’t be passed in a whole data frame; they need to be passed a specific column.</p>
  </li>
  <li>
    <p>Here’s the actual code from <a href="https://github.com/rtanglao/rt-r-ggplot2-ruby-experiments/blob/main/no-for-loop-ff-question-barcode.R">no-for-loop-ff-question-barcode.R</a> without the  “kludgy”  <code class="language-plaintext highlighter-rouge">for</code> loop:</p>
  </li>
</ul>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">
</span><span class="n">colours_array</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">colours</span><span class="p">()</span><span class="w">

</span><span class="n">getOSColour</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">.x</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w"> 
  </span><span class="n">os_colour</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"purple"</span><span class="w">
  </span><span class="n">macos_str</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"mac-os|os-x|osx|macos"</span><span class="w">
  </span><span class="n">windows_str</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"windows-7|windows-8|windows-10"</span><span class="w">
  </span><span class="n">linux_str</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"linux|ubuntu|redhat|debian"</span><span class="w">
  </span><span class="k">if</span><span class="p">(</span><span class="n">str_detect</span><span class="p">(</span><span class="n">.x</span><span class="p">,</span><span class="w"> </span><span class="n">macos_str</span><span class="p">))</span><span class="w"> </span><span class="n">os_colour</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"blue"</span><span class="w">
  </span><span class="k">if</span><span class="p">(</span><span class="n">str_detect</span><span class="p">(</span><span class="n">.x</span><span class="p">,</span><span class="w"> </span><span class="n">linux_str</span><span class="p">))</span><span class="w"> </span><span class="n">os_colour</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"green"</span><span class="w">
  </span><span class="k">if</span><span class="p">(</span><span class="n">str_detect</span><span class="p">(</span><span class="n">.x</span><span class="p">,</span><span class="w"> </span><span class="n">windows_str</span><span class="p">))</span><span class="w"> </span><span class="n">os_colour</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"hotpink"</span><span class="w">
  </span><span class="nf">return</span><span class="p">(</span><span class="n">os_colour</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">csv</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="s2">"https://raw.githubusercontent.com/rtanglao/rt-kits-api3/main/2020/2020-10-20-2020-10-20-firefox-creator-answers-desktop-all-locales.csv"</span><span class="p">)</span><span class="w">
</span><span class="c1"># see https://stackoverflow.com/questions/39975317/how-to-reverse-the-order-of-a-dataframe-in-r</span><span class="w">
</span><span class="n">reverse_csv</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">csv</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">map_df</span><span class="p">(</span><span class="n">rev</span><span class="p">)</span><span class="w">
</span><span class="n">length</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">nrow</span><span class="p">(</span><span class="n">reverse_csv</span><span class="p">)</span><span class="w">
</span><span class="n">xintercept</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">seq.int</span><span class="p">(</span><span class="n">by</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">10</span><span class="p">,</span><span class="w"> </span><span class="n">length</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">length</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="n">from</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0</span><span class="p">)</span><span class="w">
</span><span class="n">size</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">rep</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="m">4</span><span class="p">,</span><span class="m">2</span><span class="p">),</span><span class="w"> </span><span class="n">length</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">length</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="m">2</span><span class="p">)</span><span class="w">
</span><span class="n">reverse_csv_with_title_plus_content</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">reverse_csv</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">tplusc</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">paste</span><span class="p">(</span><span class="n">title</span><span class="p">,</span><span class="w"> </span><span class="n">content</span><span class="p">))</span><span class="w">
</span><span class="n">os_colours_vector</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">map_chr</span><span class="p">(</span><span class="n">reverse_csv</span><span class="o">$</span><span class="n">tags</span><span class="p">,</span><span class="w"> </span><span class="n">getOSColour</span><span class="p">)</span><span class="w">
</span><span class="n">question_colours_vector</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">map_chr</span><span class="p">(</span><span class="n">reverse_csv_with_title_plus_content</span><span class="o">$</span><span class="n">tplusc</span><span class="p">,</span><span class="w">
  </span><span class="o">~</span><span class="p">{</span><span class="n">colours_array</span><span class="p">[(</span><span class="nf">abs</span><span class="p">(</span><span class="n">digest</span><span class="o">::</span><span class="n">digest2int</span><span class="p">(</span><span class="n">.x</span><span class="p">))</span><span class="w"> </span><span class="o">%%</span><span class="w"> </span><span class="m">657</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="m">1</span><span class="p">]})</span><span class="w">
</span><span class="n">colours_vector</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="n">rbind</span><span class="p">(</span><span class="n">os_colours_vector</span><span class="p">,</span><span class="w"> </span><span class="n">question_colours_vector</span><span class="p">))</span><span class="w">
</span><span class="n">p</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ggplot</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">theme_void</span><span class="p">()</span><span class="w">
</span><span class="n">p</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">p</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">geom_vline</span><span class="p">(</span><span class="n">col</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">colours_vector</span><span class="p">,</span><span class="w"> 
                    </span><span class="n">xintercept</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">xintercept</span><span class="p">,</span><span class="w"> </span><span class="n">size</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">size</span><span class="p">)</span><span class="w">

</span></code></pre></div></div>

<h2 id="output">Output</h2>

<p>Here’s the <a href="https://github.com/rtanglao/rt-r-ggplot2-ruby-experiments/blob/main/INFOGRAPHICS/3d1c382-no-for-loop-pink-windows-purple-other-blue-macos-green-linux-2020-10-20-2020-10-20-firefox-desktop-all-locales.png">output</a> (which is the same as the for loop output of course!)</p>

<p><a data-flickr-embed="true" href="https://www.flickr.com/photos/roland/50518762551/in/datetaken-public/" title="3d1c382-no-for-loop-pink-windows-purple-other-blue-macos-green-linux-2020-10-20-2020-10-20-firefox-desktop-all-locales"><img src="https://live.staticflickr.com/65535/50518762551_e0b0672ec0.jpg" width="500" height="450" alt="3d1c382-no-for-loop-pink-windows-purple-other-blue-macos-green-linux-2020-10-20-2020-10-20-firefox-desktop-all-locales" /></a><script async="" src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"></script></p>
:ET