I"} <p>tl;dr <a href="http://www.zazzle.com/pd/spp/pt-zazzle_shirt?dz=0520de75-0e70-4233-96ea-7a9fff542a61&amp;clone=true&amp;pending=true&amp;design.areas=%5Bzazzle_shirt_10x12_back%2Czazzle_shirt_10x12_front%5D&amp;color=white&amp;size=a_m&amp;style=champion_mens_premium_mesh_tshirt_t205&amp;CMPN=shareicon&amp;lang=en&amp;social=true&amp;view=113300311085901507&amp;rf=238204589039311962">Click here to see the t-shirt i made on zazzle.com</a></p>

<h2 id="things-to-consider-for-the-next-graphic">Things to consider for the next graphic</h2>

<ul>
  <li>Double the size and use 250-300 rows and 80000 photos (or to be ‚Äúlucky‚Äù 88888 :-)?</li>
  <li>Use instagram vancouver 2016 instead of Roland‚Äôs flickr 2004-2012</li>
</ul>

<h2 id="how-to">How To</h2>

<ul>
  <li>1. copy the average hex colour file from
https://github.com/rtanglao/rt-animated-gifs/blob/master/2016-11-03/flickr-roland-2004-12-avgcolour.txt
to here: <code class="highlighter-rouge">cp ../rt-animated-gifs/2016-11-03/flickr-roland-2004-12-avgcolour.txt .</code></li>
  <li>2. <code class="highlighter-rouge">mv flickr-roland-2004-12-avgcolour.txt flickr-roland-2004-12-avgcolour.csv</code> and add line 1 with ‚Äúcolour‚Äù</li>
  <li>3. <code class="highlighter-rouge">Rscript zazzle-tshirt-flickr2004-12-square-pie-chart.R flickr-roland-2004-12-avgcolour.csv</code></li>
  <li>4. <code class="highlighter-rouge">head -40000 flickr-roland-2004-12-avgcolour.csv &gt;1st40000-flickr-roland-2004-12-avgcolour.csv</code></li>
  <li>5. <code class="highlighter-rouge">Rscript zazzle-tshirt-flickr2004-12-square-pie-chart.R 1st40000-flickr-roland-2004-12-avgcolour.csv</code></li>
  <li>6. <code class="highlighter-rouge">mv r-png-1st40000-flickr-roland-2004-12-avgcolour.png 200-rows-16800x14400-r-png-1st40000-flickr-roland-2004-12-avgcolour.png</code> go to zazzle .com and make tshirts with this graphic, it seems to resize to 2100x1800 from 16800 x 14400</li>
</ul>

<h3 id="04december2016-output">04December2016 Output</h3>

<p>(resized to 2100x1800 from 16800x14400 to fit in flickr )<br />
<a data-flickr-embed="true" href="https://www.flickr.com/photos/roland/30622308813/in/datetaken-ff/" title="200-rows-2100x1800-r-png-1st40000-flickr-roland-2004-12-avgcolour.md"><img src="https://c6.staticflickr.com/6/5746/30622308813_9581190d97_n.jpg" width="320" height="274" alt="200-rows-2100x1800-r-png-1st40000-flickr-roland-2004-12-avgcolour.md" /></a><script async="" src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"></script></p>

<h3 id="the-code">The Code</h3>

<p>The code is copy and pasted below and it‚Äôs called <a href="https://github.com/rtanglao/rt-04dec2016-flickr-2004-12-zazzle-tshirt/blob/master/zazzle-tshirt-flickr2004-12-square-pie-chart.R">zazzle-tshirt-flickr2004-12-square-pie-chart.R</a></p>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">ggplot2</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">plotrix</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">plyr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">waffle</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">grid</span><span class="p">)</span><span class="w">

</span><span class="n">tc</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">return</span><span class="w"> </span><span class="p">(</span><span class="n">head</span><span class="p">(</span><span class="n">color.id</span><span class="p">(</span><span class="n">x</span><span class="p">),</span><span class="w"> </span><span class="n">n</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">))</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">printf</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">...</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="nf">invisible</span><span class="p">(</span><span class="n">print</span><span class="p">(</span><span class="n">sprintf</span><span class="p">(</span><span class="n">...</span><span class="p">)))</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="c1">#use letters658 instead of LETTERS R constant</span><span class="w">
</span><span class="n">letters658</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">make.unique</span><span class="p">(</span><span class="nf">rep</span><span class="p">(</span><span class="nb">letters</span><span class="p">,</span><span class="w"> </span><span class="n">length.out</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">658</span><span class="p">),</span><span class="w"> </span><span class="n">sep</span><span class="o">=</span><span class="s1">''</span><span class="p">)</span><span class="w"> 
</span><span class="c1"># The above code makes up for the R constant ```LETTERS``` </span><span class="w">
</span><span class="c1"># only having 26 levels when R has 657 colours (add 1 since </span><span class="w">
</span><span class="c1"># waffle() starts at 'B' instead of 'A'). So having 657 letters </span><span class="w">
</span><span class="c1"># will allow all R colours to be plotted safely instead of any colour beyond the </span><span class="w">
</span><span class="c1"># first 26 being turned into 'not a number' i.e. ```NA```.</span><span class="w">
</span><span class="n">roland_waffle</span><span class="w"> </span><span class="o">&lt;-</span><span class="w">
  </span><span class="k">function</span><span class="w"> </span><span class="p">(</span><span class="n">parts</span><span class="p">,</span><span class="w">
            </span><span class="n">rows</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">10</span><span class="p">,</span><span class="w">
            </span><span class="n">xlab</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">NULL</span><span class="p">,</span><span class="w">
            </span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">NULL</span><span class="p">,</span><span class="w">
            </span><span class="n">colors</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w">
            </span><span class="n">size</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">2</span><span class="p">,</span><span class="w">
            </span><span class="n">flip</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">,</span><span class="w">
            </span><span class="n">reverse</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">,</span><span class="w">
            </span><span class="n">equal</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">,</span><span class="w">
            </span><span class="n">pad</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w">
            </span><span class="n">use_glyph</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">,</span><span class="w">
            </span><span class="n">glyph_size</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">12</span><span class="p">,</span><span class="w">
            </span><span class="n">legend_pos</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"right"</span><span class="p">)</span><span class="w">
  </span><span class="p">{</span><span class="w">
    </span><span class="n">part_names</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">names</span><span class="p">(</span><span class="n">parts</span><span class="p">)</span><span class="w">
    </span><span class="n">print</span><span class="p">(</span><span class="s2">"part_names BEFORE adding LETTERS:"</span><span class="p">)</span><span class="w">
    </span><span class="n">print</span><span class="p">(</span><span class="n">part_names</span><span class="p">)</span><span class="w">
    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="nf">length</span><span class="p">(</span><span class="n">part_names</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="nf">length</span><span class="p">(</span><span class="n">parts</span><span class="p">))</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="n">print</span><span class="p">(</span><span class="s2">"Adding LETTERS to part_names!!!"</span><span class="p">)</span><span class="w">
      </span><span class="n">printf</span><span class="p">(</span><span class="s2">"length:parts:%d"</span><span class="p">,</span><span class="w"> </span><span class="nf">length</span><span class="p">(</span><span class="n">parts</span><span class="p">))</span><span class="w">
      </span><span class="n">printf</span><span class="p">(</span><span class="s2">"length partname:%d"</span><span class="p">,</span><span class="w"> </span><span class="nf">length</span><span class="p">(</span><span class="n">part_names</span><span class="p">))</span><span class="w">
      </span><span class="n">part_names</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="n">part_names</span><span class="p">,</span><span class="w"> </span><span class="n">letters658</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="nf">length</span><span class="p">(</span><span class="n">parts</span><span class="p">)</span><span class="w"> </span><span class="o">-</span><span class="w">
                                               </span><span class="nf">length</span><span class="p">(</span><span class="n">part_names</span><span class="p">)])</span><span class="w">
    </span><span class="p">}</span><span class="w">
    </span><span class="n">print</span><span class="p">(</span><span class="s2">"part_names after adding LETTERS:"</span><span class="p">)</span><span class="w">
    </span><span class="n">print</span><span class="p">(</span><span class="n">part_names</span><span class="p">)</span><span class="w">
    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="nf">all</span><span class="p">(</span><span class="nf">is.na</span><span class="p">(</span><span class="n">colors</span><span class="p">)))</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="n">colors</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">brewer.pal</span><span class="p">(</span><span class="nf">length</span><span class="p">(</span><span class="n">parts</span><span class="p">),</span><span class="w"> </span><span class="s2">"Set2"</span><span class="p">)</span><span class="w">
    </span><span class="p">}</span><span class="w">
    </span><span class="n">print</span><span class="p">(</span><span class="s2">"parts after adding LETTERS:"</span><span class="p">)</span><span class="w">
    </span><span class="n">print</span><span class="p">(</span><span class="n">parts</span><span class="p">)</span><span class="w">
    </span><span class="n">printf</span><span class="p">(</span><span class="s2">"BEFORE unlist() length:parts:%d"</span><span class="p">,</span><span class="w"> </span><span class="nf">length</span><span class="p">(</span><span class="n">parts</span><span class="p">))</span><span class="w">
    </span><span class="n">parts_vec</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">unlist</span><span class="p">(</span><span class="n">sapply</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="nf">length</span><span class="p">(</span><span class="n">parts</span><span class="p">),</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">i</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nf">rep</span><span class="p">(</span><span class="n">letters658</span><span class="p">[</span><span class="n">i</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="m">1</span><span class="p">],</span><span class="w"> </span><span class="n">parts</span><span class="p">[</span><span class="n">i</span><span class="p">])</span><span class="w">
    </span><span class="p">}))</span><span class="w">
    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">reverse</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="n">parts_vec</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rev</span><span class="p">(</span><span class="n">parts_vec</span><span class="p">)</span><span class="w">
    </span><span class="p">}</span><span class="w">
    </span><span class="n">print</span><span class="p">(</span><span class="s2">"parts_vec:"</span><span class="p">)</span><span class="w">
    </span><span class="n">print</span><span class="p">(</span><span class="n">parts_vec</span><span class="p">)</span><span class="w">
    </span><span class="n">dat</span><span class="w"> </span><span class="o">&lt;-</span><span class="w">
      </span><span class="n">expand.grid</span><span class="p">(</span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="n">rows</span><span class="p">,</span><span class="w"> </span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">seq_len</span><span class="p">(</span><span class="n">pad</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="p">(</span><span class="nf">ceiling</span><span class="p">(</span><span class="nf">sum</span><span class="p">(</span><span class="w">
        </span><span class="n">parts</span><span class="w">
      </span><span class="p">)</span><span class="w"> </span><span class="o">/</span><span class="w"> </span><span class="n">rows</span><span class="p">))))</span><span class="w">
    </span><span class="n">dat</span><span class="o">$</span><span class="n">value</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="n">parts_vec</span><span class="p">,</span><span class="w"> </span><span class="nf">rep</span><span class="p">(</span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">nrow</span><span class="p">(</span><span class="n">dat</span><span class="p">)</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="nf">length</span><span class="p">(</span><span class="n">parts_vec</span><span class="p">)))</span><span class="w">
    </span><span class="n">print</span><span class="p">(</span><span class="n">dat</span><span class="p">)</span><span class="w">
    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="o">!</span><span class="n">inherits</span><span class="p">(</span><span class="n">use_glyph</span><span class="p">,</span><span class="w"> </span><span class="s2">"logical"</span><span class="p">))</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="n">fontlab</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">rep</span><span class="p">(</span><span class="n">fa_unicode</span><span class="p">[</span><span class="n">use_glyph</span><span class="p">],</span><span class="w"> </span><span class="nf">length</span><span class="p">(</span><span class="n">unique</span><span class="p">(</span><span class="n">parts_vec</span><span class="p">)))</span><span class="w">
      </span><span class="n">dat</span><span class="o">$</span><span class="n">fontlab</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="n">fontlab</span><span class="p">[</span><span class="nf">as.numeric</span><span class="p">(</span><span class="n">factor</span><span class="p">(</span><span class="n">parts_vec</span><span class="p">))],</span><span class="w">
                       </span><span class="nf">rep</span><span class="p">(</span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">nrow</span><span class="p">(</span><span class="n">dat</span><span class="p">)</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="nf">length</span><span class="p">(</span><span class="n">parts_vec</span><span class="p">)))</span><span class="w">
    </span><span class="p">}</span><span class="w">
    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">flip</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="n">gg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ggplot</span><span class="p">(</span><span class="n">dat</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">y</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">x</span><span class="p">))</span><span class="w">
    </span><span class="p">}</span><span class="w">
    </span><span class="k">else</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="n">gg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ggplot</span><span class="p">(</span><span class="n">dat</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">y</span><span class="p">))</span><span class="w">
    </span><span class="p">}</span><span class="w">
    </span><span class="n">gg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gg</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">theme_bw</span><span class="p">()</span><span class="w">
    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">inherits</span><span class="p">(</span><span class="n">use_glyph</span><span class="p">,</span><span class="w"> </span><span class="s2">"logical"</span><span class="p">))</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="n">gg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gg</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">geom_tile</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">value</span><span class="p">),</span><span class="w"> </span><span class="n">color</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"white"</span><span class="p">,</span><span class="w">
                           </span><span class="n">size</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">size</span><span class="p">)</span><span class="w">
      </span><span class="n">gg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gg</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">scale_fill_manual</span><span class="p">(</span><span class="n">name</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w">
                                   </span><span class="n">values</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">colors</span><span class="p">,</span><span class="w">
                                   </span><span class="n">labels</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">part_names</span><span class="p">)</span><span class="w">
      </span><span class="n">gg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w">
        </span><span class="n">gg</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">guides</span><span class="p">(</span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">guide_legend</span><span class="p">(</span><span class="n">override.aes</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">list</span><span class="p">(</span><span class="n">colour</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">NULL</span><span class="p">)))</span><span class="w">
    </span><span class="p">}</span><span class="w">
    </span><span class="k">else</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">choose_font</span><span class="p">(</span><span class="s2">"FontAwesome"</span><span class="p">,</span><span class="w"> </span><span class="n">quiet</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="n">stop</span><span class="p">(</span><span class="w">
          </span><span class="s2">"FontAwesome not found. Install via: https://github.com/FortAwesome/Font-Awesome/tree/master/fonts"</span><span class="p">,</span><span class="w">
          </span><span class="n">call.</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="w">
        </span><span class="p">)</span><span class="w">
      </span><span class="p">}</span><span class="w">
      </span><span class="n">suppressWarnings</span><span class="p">(</span><span class="n">suppressMessages</span><span class="p">(</span><span class="n">font_import</span><span class="p">(</span><span class="w">
        </span><span class="n">system.file</span><span class="p">(</span><span class="s2">"fonts"</span><span class="p">,</span><span class="w">
                    </span><span class="n">package</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"waffle"</span><span class="p">),</span><span class="w">
        </span><span class="n">recursive</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">,</span><span class="w">
        </span><span class="n">prompt</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="w">
      </span><span class="p">)))</span><span class="w">
      </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="o">!</span><span class="nf">interactive</span><span class="p">()</span><span class="w"> </span><span class="o">||</span><span class="w"> </span><span class="n">stats</span><span class="o">::</span><span class="n">runif</span><span class="p">(</span><span class="m">1</span><span class="p">)</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="m">0.1</span><span class="p">))</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="n">message</span><span class="p">(</span><span class="s2">"Font Awesome by Dave Gandy - http://fontawesome.io"</span><span class="p">)</span><span class="w">
      </span><span class="p">}</span><span class="w">
      </span><span class="n">gg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gg</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">geom_tile</span><span class="p">(</span><span class="w">
        </span><span class="n">color</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w">
        </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w">
        </span><span class="n">size</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">size</span><span class="p">,</span><span class="w">
        </span><span class="n">alpha</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w">
        </span><span class="n">show_guide</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="w">
      </span><span class="p">)</span><span class="w">
      </span><span class="n">gg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gg</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">geom_point</span><span class="p">(</span><span class="w">
        </span><span class="n">aes</span><span class="p">(</span><span class="n">color</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">value</span><span class="p">),</span><span class="w">
        </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w">
        </span><span class="n">size</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w">
        </span><span class="n">show_guide</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="w">
      </span><span class="p">)</span><span class="w">
      </span><span class="n">gg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gg</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">geom_text</span><span class="p">(</span><span class="w">
        </span><span class="n">aes</span><span class="p">(</span><span class="n">color</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">value</span><span class="p">,</span><span class="w"> </span><span class="n">label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">fontlab</span><span class="p">),</span><span class="w">
        </span><span class="n">family</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"FontAwesome"</span><span class="p">,</span><span class="w">
        </span><span class="n">size</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">glyph_size</span><span class="p">,</span><span class="w">
        </span><span class="n">show_guide</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="w">
      </span><span class="p">)</span><span class="w">
      </span><span class="n">gg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gg</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">scale_color_manual</span><span class="p">(</span><span class="n">name</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w">
                                    </span><span class="n">values</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">colors</span><span class="p">,</span><span class="w">
                                    </span><span class="n">labels</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">part_names</span><span class="p">)</span><span class="w">
      </span><span class="n">gg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w">
        </span><span class="n">gg</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">guides</span><span class="p">(</span><span class="n">color</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">guide_legend</span><span class="p">(</span><span class="n">override.aes</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">list</span><span class="p">(</span><span class="n">shape</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">15</span><span class="p">,</span><span class="w">
             </span><span class="n">size</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">7</span><span class="p">)))</span><span class="w">
      </span><span class="n">gg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gg</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">theme</span><span class="p">(</span><span class="n">legend.background</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">element_rect</span><span class="p">(</span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">NA</span><span class="p">))</span><span class="w">
      </span><span class="n">gg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gg</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">theme</span><span class="p">(</span><span class="n">legend.key</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">element_rect</span><span class="p">(</span><span class="n">color</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">NA</span><span class="p">))</span><span class="w">
    </span><span class="p">}</span><span class="w">
    </span><span class="n">gg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gg</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">labs</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">xlab</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">NULL</span><span class="p">,</span><span class="w"> </span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">title</span><span class="p">)</span><span class="w">
    </span><span class="n">gg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gg</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">scale_x_continuous</span><span class="p">(</span><span class="n">expand</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">))</span><span class="w">
    </span><span class="n">gg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gg</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">scale_y_continuous</span><span class="p">(</span><span class="n">expand</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">))</span><span class="w">
    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">equal</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="n">gg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gg</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">coord_equal</span><span class="p">()</span><span class="w">
    </span><span class="p">}</span><span class="w">
    </span><span class="n">gg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gg</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">theme</span><span class="p">(</span><span class="n">panel.grid</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">element_blank</span><span class="p">())</span><span class="w">
    </span><span class="n">gg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gg</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">theme</span><span class="p">(</span><span class="n">panel.border</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">element_blank</span><span class="p">())</span><span class="w">
    </span><span class="n">gg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gg</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">theme</span><span class="p">(</span><span class="n">panel.background</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">element_blank</span><span class="p">())</span><span class="w">
    </span><span class="n">gg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gg</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">theme</span><span class="p">(</span><span class="n">panel.margin</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">unit</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="s2">"null"</span><span class="p">))</span><span class="w">
    </span><span class="n">gg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gg</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">theme</span><span class="p">(</span><span class="n">axis.text</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">element_blank</span><span class="p">())</span><span class="w">
    </span><span class="n">gg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gg</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">theme</span><span class="p">(</span><span class="n">axis.title.x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">element_text</span><span class="p">(</span><span class="n">size</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">10</span><span class="p">))</span><span class="w">
    </span><span class="n">gg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gg</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">theme</span><span class="p">(</span><span class="n">axis.ticks</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">element_blank</span><span class="p">())</span><span class="w">
    </span><span class="n">gg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gg</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">theme</span><span class="p">(</span><span class="n">axis.line</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">element_blank</span><span class="p">())</span><span class="w">
    </span><span class="n">gg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gg</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">theme</span><span class="p">(</span><span class="n">axis.ticks.length</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">unit</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="s2">"null"</span><span class="p">))</span><span class="w">
    </span><span class="n">gg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gg</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">theme</span><span class="p">(</span><span class="n">plot.title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">element_text</span><span class="p">(</span><span class="n">size</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">18</span><span class="p">))</span><span class="w">
    </span><span class="n">gg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gg</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">theme</span><span class="p">(</span><span class="n">plot.background</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">element_blank</span><span class="p">())</span><span class="w">
    </span><span class="n">gg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gg</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">theme</span><span class="p">(</span><span class="n">plot.margin</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">unit</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">),</span><span class="w"> </span><span class="s2">"null"</span><span class="p">))</span><span class="w">
    </span><span class="n">gg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gg</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">theme</span><span class="p">(</span><span class="n">plot.margin</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">rep</span><span class="p">(</span><span class="n">unit</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="s2">"null"</span><span class="p">),</span><span class="w"> </span><span class="m">4</span><span class="p">))</span><span class="w">
    </span><span class="n">gg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gg</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">theme</span><span class="p">(</span><span class="n">legend.position</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">legend_pos</span><span class="p">)</span><span class="w">
    </span><span class="n">gg</span><span class="w">
  </span><span class="p">}</span><span class="w">


</span><span class="n">args</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">commandArgs</span><span class="p">(</span><span class="kc">TRUE</span><span class="p">)</span><span class="w">

</span><span class="c1">## Default setting when no arguments passed</span><span class="w">
</span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="nf">length</span><span class="p">(</span><span class="n">args</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">1</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">args</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"--help"</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="s2">"--help"</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="n">args</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">cat</span><span class="p">(</span><span class="w">
    </span><span class="s2">"
    Arguments:
    CSV file with a column with colour with hex values for colours
    --help              - print this text
    Example:
    Rscript twenty-four-square-piechart-from-csv.R 001_ThuJan1.csv\n\n"</span><span class="w">
  </span><span class="p">)</span><span class="w">
  </span><span class="n">q</span><span class="p">(</span><span class="n">save</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"no"</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">


</span><span class="n">main</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">data3</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="n">file</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">args</span><span class="p">[</span><span class="m">1</span><span class="p">],</span><span class="w"> </span><span class="n">stringsAsFactors</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">F</span><span class="p">)</span><span class="w">
  
  </span><span class="n">data3</span><span class="o">$</span><span class="n">colourname</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sapply</span><span class="p">(</span><span class="n">data3</span><span class="o">$</span><span class="n">colour</span><span class="p">,</span><span class="w"> </span><span class="n">tc</span><span class="p">)</span><span class="w">

  </span><span class="n">countcolourname</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">count</span><span class="p">(</span><span class="n">data3</span><span class="p">,</span><span class="w"> </span><span class="s2">"colourname"</span><span class="p">)</span><span class="w">
  </span><span class="n">countcolourname</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">countcolourname</span><span class="p">[</span><span class="n">order</span><span class="p">(</span><span class="o">-</span><span class="n">countcolourname</span><span class="o">$</span><span class="n">freq</span><span class="p">),</span><span class="w"> </span><span class="p">]</span><span class="w">

  </span><span class="n">colour_vector2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">setNames</span><span class="p">(</span><span class="n">countcolourname</span><span class="o">$</span><span class="n">freq</span><span class="p">,</span><span class="w"> </span><span class="n">countcolourname</span><span class="o">$</span><span class="n">colourname</span><span class="p">)</span><span class="w">
  </span><span class="n">print</span><span class="p">(</span><span class="n">colour_vector2</span><span class="p">)</span><span class="w">
  </span><span class="n">print</span><span class="p">(</span><span class="nf">sum</span><span class="p">(</span><span class="n">colour_vector2</span><span class="p">))</span><span class="w">
  </span><span class="n">magic_row_size_number</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">100</span><span class="w">

  </span><span class="n">numrows</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">200</span><span class="w">
  </span><span class="n">print</span><span class="w"> </span><span class="p">(</span><span class="n">numrows</span><span class="p">)</span><span class="w">
  </span><span class="n">print</span><span class="p">(</span><span class="n">countcolourname</span><span class="o">$</span><span class="n">colourname</span><span class="p">)</span><span class="w">
  </span><span class="n">p</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">roland_waffle</span><span class="p">(</span><span class="w">
    </span><span class="n">colour_vector2</span><span class="p">,</span><span class="w">
    </span><span class="n">rows</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">numrows</span><span class="p">,</span><span class="w">
    </span><span class="n">size</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1.0</span><span class="p">,</span><span class="w">
    </span><span class="n">colors</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">countcolourname</span><span class="o">$</span><span class="n">colourname</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
    </span><span class="n">theme</span><span class="p">(</span><span class="n">legend.position</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"none"</span><span class="p">)</span><span class="w"> 

  </span><span class="n">filename</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">sprintf</span><span class="p">(</span><span class="s2">"r-png-%s"</span><span class="p">,</span><span class="w"> </span><span class="n">gsub</span><span class="p">(</span><span class="s2">"csv"</span><span class="p">,</span><span class="w"> </span><span class="s2">"png"</span><span class="p">,</span><span class="w"> </span><span class="n">basename</span><span class="p">(</span><span class="n">args</span><span class="p">[</span><span class="m">1</span><span class="p">])))</span><span class="w">
  </span><span class="n">ggsave</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span><span class="w">
         </span><span class="n">p</span><span class="p">,</span><span class="w">
         </span><span class="n">width</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">233.33333333</span><span class="p">,</span><span class="w">
         </span><span class="n">height</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">200</span><span class="p">,</span><span class="w">
         </span><span class="n">dpi</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">72</span><span class="p">,</span><span class="w">
         </span><span class="n">limitsize</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">,</span><span class="w">
         </span><span class="n">bg</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"transparent"</span><span class="w">
         </span><span class="p">)</span><span class="w"> </span><span class="c1">#multiply height and width by dpi to get px of 16800*14400</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">sink</span><span class="p">(</span><span class="s2">"log.txt"</span><span class="p">)</span><span class="w">

</span><span class="n">main</span><span class="p">()</span><span class="w">

</span><span class="n">sink</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>
:ET