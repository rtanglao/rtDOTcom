I"¢<p><a href="http://rolandtanglao.com/2020/07/29/p1-blogthis-checkvist-list-links-to-blog/">Discovered</a>: Oct 16, 2025 14:57 (UTC)<a href="https://www.cs.uml.edu/~holly/teaching/91550/spring2012/p85-grudin.pdf">ME:: classic paper about why groupware and social apps fail ; Jonathan Grudin:: 1988:: WHY CSCW APPLICATIONS FAIL: PROBLEMS IN THE DESIGN AND EVALUATION OF ORGANIZATIONAL INTERFACES</a></p>

<h2 id="quote">QUOTE</h2>

<ul>
  <li>Read the whole thing: <a href="https://www.cs.uml.edu/~holly/teaching/91550/spring2012/p85-grudin.pdf">Jonathan Grudin:: 1988:: WHY CSCW APPLICATIONS FAIL: PROBLEMS IN THE DESIGN AND EVALUATION OF ORGANIZATIONAL INTERFACES</a></li>
</ul>

<blockquote>
  <p>Many systems, applications, and features that support
cooperative work share two characteristics: A significant
investment has been made in their development, and their
successes have consistently fallen far short of expecta-
tions. Examination of several application areas reveals a
common dynamic: 1) A factor contributing to the
applicationâ€™s failure is the disparity between those who
will benefit from an application and those who must do
additional work to support it. 2) A factor contributing to
the decision-making failure that leads to ill-fated
development efforts is the unique lack of management
intuition for CSCW applications. 3) A factor contributing
to the failure to learn from experience is the extreme
difficulty of evaluating these applications. These three
problem areas escape adequate notice due to two natural
but ultimately misleading analogies: the analogy between
multi-user application programs and multi-user computer
systems, and the analogy between multi-user applications
and single-user applications. These analogies influence
the way we think about cooperative work applications and
designers and decision-makers fail to recognize their
limits. Several CSCW application areas are examined in
some deta</p>
</blockquote>
:ET