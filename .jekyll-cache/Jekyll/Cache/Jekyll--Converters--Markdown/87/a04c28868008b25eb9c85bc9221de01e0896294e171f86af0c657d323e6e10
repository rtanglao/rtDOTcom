I"Õ	<ul>
  <li>Having lots of fun testing ngrok. As of today, hereâ€™s how I was able to get ngrok working with ssh from macOS to WSL (DISCLAIMER: Step 3 may not be kosher :-) ! The following is unsupported and use at your own risk! Please be careful!):</li>
  <li>0. Start the ssh service in WSL e.g. on ubuntu <code class="language-plaintext highlighter-rouge">sudo systemctl enable ssh</code></li>
  <li>1. Generate an SSH Key on your mac (I used the github directions:<a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent">Generating a new SSH key and adding it to the ssh-agent</a> and of course used <code class="language-plaintext highlighter-rouge">*.tcp.ngrok.io</code> instead of <code class="language-plaintext highlighter-rouge">*.github.com</code>), letâ€™s call it <code class="language-plaintext highlighter-rouge">wsl2</code>. This key must have a passphrase or it wonâ€™t work. Add it to the keychain.</li>
  <li>2. Copy the public key to the WSL machine e.g. using <code class="language-plaintext highlighter-rouge">croc</code> <code class="language-plaintext highlighter-rouge">croc ~/.ssh/wsl2.pub</code></li>
  <li>3. Rename the nologin file to allow logins to WSL (Otherwise ssh will fail  with a <code class="language-plaintext highlighter-rouge">pam_nologin</code> error):
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo mv</span> /var/run/nologin /var/run/2023-01-31-renamed-nologin
</code></pre></div>    </div>
  </li>
  <li>4. start ngrok <code class="language-plaintext highlighter-rouge">ngrok tcp 22</code></li>
  <li>5. SSH in e.g. <code class="language-plaintext highlighter-rouge">ssh -i ~/.ssh/wsl2.pub roland@somehost.tcp.ngrok.io -p &lt;someport&gt;</code></li>
</ul>

<h3 id="previously">Previously</h3>
<ul>
  <li>Dec 2022: <a href="http://rolandtanglao.com/2022/12/10/p1-tailscale-funnel-ideal-for-home-hosted-experimental-software/">Tailscale Funnel is a reverse proxy service complete with TLS cert, DNS, public IP address and HTTPS server that seems perfect for small, experimental software on the internet like snac2</a></li>
  <li>Sep 2022: <a href="http://rolandtanglao.com/2022/09/04/p1-croc-fast-e2e-file-text-sharing-between-two-computers/">Zack Scholl: croc Fast, simple, and e2e encrypted file transfer between any two computers. &lt;- so many great CLI tools so little time. See â€˜Previouslyâ€™</a></li>
</ul>
:ET