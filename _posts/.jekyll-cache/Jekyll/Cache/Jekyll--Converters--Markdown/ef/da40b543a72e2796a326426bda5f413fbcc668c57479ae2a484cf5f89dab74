I"|<h1 id="pontifications">Pontifications</h1>

<ul>
  <li>the following is from <a href="https://github.com/rtanglao/rt-making-r-and-rstudio-work-for-me#07-january-2019-how-to-calculate-time-differences-for-support">my new repo about r and r studio tips and tricks</a></li>
</ul>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">interval</span><span class="p">(</span><span class="n">ymd_hms</span><span class="p">(</span><span class="s2">"2019-01-04 18:40:00"</span><span class="p">,</span><span class="w"> 
  </span><span class="n">tz</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"America/Vancouver"</span><span class="p">),</span><span class="w"> 
  </span><span class="n">ymd_hms</span><span class="p">(</span><span class="s2">"2019-01-07 12:59:00"</span><span class="p">,</span><span class="w"> 
    </span><span class="n">tz</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"America/Vancouver"</span><span class="p">))</span><span class="w"> </span><span class="o">/</span><span class="w"> </span><span class="n">hours</span><span class="p">(</span><span class="m">1</span><span class="p">)</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">66.31667</span><span class="w">
</span></code></pre></div></div>

<ul>
  <li>The above ^^^^ is the most accurate and the best way to compute <a href="http://rolandtanglao.com/2019/01/06/p1-lubridate-ydate-to-release-week-daynumber/">daynumber starting at an arbitrary day of the week e.g. Tuesday for Firefox releases</a>! 
You can also use lubridate <code class="language-plaintext highlighter-rouge">durations</code>, but 
durations arenâ€™t accurate when you transition 
from month to month or year to year</li>
</ul>
:ET